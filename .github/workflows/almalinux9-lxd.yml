name: 0 - AlmaLinux 9 LXD

on:
  workflow_dispatch:
  repository_dispatch:
    types: [run-almalinux-9-lxd]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.release || github.event.client_payload.release }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Remove Docker to prevent LXD conflicts
        run: |
          sudo systemctl stop docker || true
          sudo apt-get remove -y docker.io docker-ce || true
          sudo systemctl disable docker || true
          sudo nft flush ruleset || true

      - name: Install LXD (snap)
        run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install lxd
          # Initialise LXD non-interactively (all defaults)
          sudo lxd init --auto

      - name: Launch AlmaLinux 9 container (systemd enabled)
        run: |
          sudo lxc launch images:almalinux/9 almalinux9 -c security.nesting=true -c security.privileged=true
          # Give the container a moment to boot & cloud-init to finish
          sleep 25
          sudo lxc exec almalinux9 -- bash -c "dnf install -y curl sudo"

      - name: Copy project scripts into container
        run: |
          for f in scripts/*; do
            dest="/home/$(basename "$f")"
            sudo lxc file push "$f" almalinux9"$dest"
            sudo lxc exec almalinux9 -- chmod +x "$dest"
          done

      - name: Create required directories
        run: |
          sudo lxc exec almalinux9 -- mkdir -p /var/run/postgresql
          sudo lxc exec almalinux9 -- mkdir -p /usr/src/kernels
          sudo lxc exec almalinux9 -- mkdir -p /var/lib/pgsql/16/data
          sudo lxc exec almalinux9 -- chmod 0700 /var/lib/pgsql/16/data

      # --------------------------------------------------------------------
      # Centmin Mod installation & validation steps (converted from Docker)
      # --------------------------------------------------------------------

      - name: Install Centmin Mod
        run: |
          sudo lxc exec almalinux9 -- bash -c "curl -4sL https://centminmod.com/betainstaller-el10.sh | bash" | tee cmm-install.log
          tail -80 cmm-install.log >> "$GITHUB_STEP_SUMMARY"

      - name: Display installer tail
        run: |
          echo "Last 80 lines of Centmin Mod install log:"
          tail -80 cmm-install.log

      - name: EL Info collection
        run: |
          sudo lxc exec almalinux9 -- bash -c "cat /etc/os-release"
          sudo lxc exec almalinux9 -- bash -c "lscpu"
          sudo lxc exec almalinux9 -- bash -c "dnf repolist all"
          sudo lxc exec almalinux9 -- bash -c "dnf module list"

      - name: Inspect Nginx uid/gid & home
        run: |
          sudo lxc exec almalinux9 -- id nginx
          sudo lxc exec almalinux9 -- ls -lahn /home/nginx

      - name: PHP-FPM restart & status
        run: |
          sudo lxc exec almalinux9 -- systemctl restart php-fpm || true
          sudo lxc exec almalinux9 -- systemctl status php-fpm --no-pager || true
          sudo lxc exec almalinux9 -- journalctl -xe --no-pager | tail -n 35 || true

      - name: Nginx status & sanity
        run: |
          sudo lxc exec almalinux9 -- systemctl status nginx --no-pager || true
          sudo lxc exec almalinux9 -- curl -I http://localhost || true
          sudo lxc exec almalinux9 -- curl -sIv http://localhost || true
          sudo lxc exec almalinux9 -- /usr/local/sbin/nginx -V || true

      - name: MariaDB status & vars
        run: |
          sudo lxc exec almalinux9 -- systemctl status mariadb --no-pager || true
          sudo lxc exec almalinux9 -- mysqladmin var | tr -s ' ' || true

      - name: Python, Pip & Redis checks
        run: |
          sudo lxc exec almalinux9 -- python3 --version
          sudo lxc exec almalinux9 -- pip --version
          sudo lxc exec almalinux9 -- redis-cli info | head -n 20 || true
          sudo lxc exec almalinux9 -- systemctl status redis --no-pager || true

      - name: CSF firewall quick check
        run: |
          sudo lxc exec almalinux9 -- csf -v || true
          sudo lxc exec almalinux9 -- csf -ra || true

      - name: Centmin tools & addons
        run: |
          sudo lxc exec almalinux9 -- /usr/local/src/centminmod/tools/cminfo.sh || true
          sudo lxc exec almalinux9 -- /usr/local/src/centminmod/addons/golang.sh install || true
          sudo lxc exec almalinux9 -- /usr/local/src/centminmod/addons/nodejs.sh install || true

      - name: Optional Nginx upgrade test (option 4)
        run: sudo lxc exec almalinux9 -- /home/centmin-option-4.sh || true

      - name: Copy Centmin logs to host
        run: |
          mkdir -p centminlogs
          sudo lxc exec almalinux9 -- tar -C /root/centminlogs -cf - . | tar -C centminlogs -xf -

      - name: Upload Centmin logs artifact
        uses: actions/upload-artifact@v4
        with:
          name: centmin_logs
          path: centminlogs/

  # ---------------------------- Notifications -----------------------------
  discordNotificationSuccess:
    needs: build
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Discord: success
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\":\"Workflow '${{ github.workflow }}' was triggered by '${{ github.event_name }}' and completed successfully!\"}" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

  discordNotificationFailure:
    needs: build
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Discord: failure
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\":\"Workflow '${{ github.workflow }}' was triggered by '${{ github.event_name }}' and failed!\"}" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}