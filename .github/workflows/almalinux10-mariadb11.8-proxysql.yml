name: 0 - AlmaLinux 10 + MariaDB 11.8 + ProxySQL

on:
  workflow_dispatch:
  repository_dispatch:
    types: [run-almalinux-10-mariadb-118-proxysql-workflow]


concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.release || github.event.client_payload.release }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Sysbox
        run: |
          curl -LO https://downloads.nestybox.com/sysbox/releases/v0.6.7/sysbox-ce_0.6.7-0.linux_amd64.deb
          sudo dpkg -i sysbox-ce_0.6.7-0.linux_amd64.deb || sudo apt-get install -f

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build 
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./dockerfiles/Dockerfile-almalinux10
          platforms: linux/amd64
          load: true
          tags: cmm_el89:latest

      - name: Debug payload (repository_dispatch)
        run: echo ${{ github.event.client_payload.release }}
      
      - name: Debug input (workflow_dispatch)
        run: echo ${{ github.event.inputs.release }}

      - name: Run container Centmmin Mod LEMP AlmaLinux 10 Install
        run: |
          docker run --cgroupns host -d --name=cmm_el89 \
            --privileged \
            --runtime=sysbox-runc \
            --cap-add=SYS_ADMIN \
            --cap-add=SYS_RESOURCE \
            --security-opt seccomp=unconfined \
            --security-opt label=disable \
            --security-opt apparmor=unconfined \
            --tmpfs /run \
            --tmpfs /run/lock \
            -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
            cmm_el89:latest
          sleep 4
          docker exec cmm_el89 bash -c "mkdir -p /etc/centminmod"
          docker exec cmm_el89 bash -c "echo 'MARIADB_INSTALLELEVENEIGHT=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_el89 bash -c "curl -4sL https://centminmod.com/betainstaller-el10.sh | bash" | tee cmm-install.log
          output=$(tail -80 cmm-install.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: Monitor MariaDB Service Status
        run: |
          echo "=== MariaDB Service Status Check at $(date) ==="
          docker exec cmm_el89 bash -c "systemctl is-active mariadb.service && echo 'MariaDB is RUNNING' || echo 'MariaDB is NOT running'"
          docker exec cmm_el89 bash -c "systemctl status mariadb.service --no-pager || true"
        continue-on-error: true

      - name: Display Centmmin Mod LEMP Install Log
        run: |
          echo "Last 80 lines of Centmmin Mod LEMP Install Log:"
          echo "----------------------------------------"
          tail -80 cmm-install.log
          echo "----------------------------------------"
        continue-on-error: true

      - name: EL10 Info Collection
        run: |
          docker exec cmm_el89 bash -c "cat /etc/releases; echo"
          docker exec cmm_el89 bash -c "cat /etc/os-release; echo"
          docker exec cmm_el89 bash -c "lscpu; echo"
          docker exec cmm_el89 bash -c "dnf repolist all; echo"
          docker exec cmm_el89 bash -c "dnf module list; echo"
          docker exec cmm_el89 bash -c "dnf list enchant2 enchant2-devel; echo"
        continue-on-error: true

      - name: Inspect nginx uid/gid
        run: |
          docker exec cmm_el89 bash -c "id nginx; echo"
          docker exec cmm_el89 bash -c "ls -lahn /home/nginx"
        continue-on-error: true

      - name: Check pure-ftpd virtual FTP user login
        run: |
          # Add pure-ftpd virtual user
          docker exec cmm_el89 bash -c 'openssl dhparam -out /etc/ssl/private/pure-ftpd-dhparams.pem 2048 >/dev/null 2>&1 && systemctl restart pure-ftpd'
          docker exec cmm_el89 bash -c '( echo "ftppass" ; echo "ftppass" ) | pure-pw useradd ftpuser -u nginx -g $(id -g nginx) -d "/home/nginx/domains/demodomain.com"; pure-pw mkdb'
          # Get container IP address
          CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' cmm_el89)         
          # Install lftp
          docker exec cmm_el89 bash -c 'yum -q -y install lftp'
          # Test FTP login using lftp
          docker exec cmm_el89 bash -c "lftp -e 'set ftp:passive-mode yes; set ftp:ssl-allow yes; set ftp:ssl-force yes; set ssl:verify-certificate no; open -u ftpuser,ftppass -p 21 ftp://$CONTAINER_IP; ls'"
        continue-on-error: true

      - name: Nginx Configure
        run: |
          docker exec cmm_el89 bash -c "cat /root/centminlogs/nginx-configure-*"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Nginx Patches
        run: |
          docker exec cmm_el89 bash -c "cat /root/centminlogs/patch_patchnginx_*"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: PHP-FPM Patches
        run: |
          docker exec cmm_el89 bash -c "cat /root/centminlogs/patch_php_*"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Disk Usage Analysis
        run: |
          docker exec cmm_el89 bash -c "du -sh /svr-setup"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "df -hT"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "rpm -qa --queryformat '%10{size} - %-25{name} \t %{version}\n' | sort -n"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh setup
        run: |
          sleep 1
          docker exec cmm_el89 bash -c "echo '1' > /etc/centminmod/email-primary.ini"
          docker exec cmm_el89 bash -c "echo '2' > /etc/centminmod/email-secondary.ini"
        continue-on-error: true

      - name: YUM repolist all
        run: |
          sleep 1
          docker exec cmm_el89 bash -c "yum repolist all"
        continue-on-error: true

      - name: Inspect wget install
        run: |
          sleep 1
          docker exec cmm_el89 bash -c "/usr/local/bin/wget -V"
          docker exec cmm_el89 bash -c "/usr/bin/wget -V"
        continue-on-error: true

      - name: Inspect ccache install
        run: |
          sleep 1
          docker exec cmm_el89 bash -c "/usr/local/bin/ccache -V"
          sleep 1
          docker exec cmm_el89 bash -c "/usr/local/bin/ccache -s"
          sleep 1
          docker exec cmm_el89 bash -c "grep ccache ~/.bashrc"
        continue-on-error: true

      - name: Inspect ccache YUM install
        run: |
          sleep 1
          docker exec cmm_el89 bash -c "/usr/bin/ccache -V"
          sleep 1
          docker exec cmm_el89 bash -c "/usr/bin/ccache -s"
          sleep 1
          docker exec cmm_el89 bash -c "grep ccache ~/.bashrc"
        continue-on-error: true

      - name: Inspect PHP-FPM setup
        run: |
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "systemctl status php-fpm.service"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "php-config || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "/usr/local/bin/php --ini"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "ldd /usr/local/bin/php"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "/usr/local/bin/php -v"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Inspect Nginx setup
        run: |
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "ls -lAh /usr/local/nginx/logs || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "cat /usr/local/nginx/logs/nginx.pid || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "ps aux | grep nginx"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "systemctl status nginx.service"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "curl -I http://localhost"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "curl -sIv http://localhost"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "/usr/local/sbin/nginx -V"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "ldd /usr/local/sbin/nginx"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Check MariaDB Logging Configuration
        run: |
          docker exec cmm_el89 bash -c "echo '=== MariaDB Logging Configuration ==='"
          docker exec cmm_el89 bash -c "grep -E 'log-error|log_error' /etc/my.cnf || echo 'No log-error directive in /etc/my.cnf'"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "ls -lah /var/log/ | grep -i mysql || echo 'No mysql logs in /var/log/'"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "ls -lah /var/lib/mysql/ | grep -i '\.err\|\.log' || echo 'No .err or .log files in /var/lib/mysql/'"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Inspect MariaDB setup
        run: |
          docker exec cmm_el89 bash -c "echo '=== MariaDB Service Status ==='"
          docker exec cmm_el89 bash -c "systemctl status mariadb.service --no-pager -l || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== MariaDB Journal (Last 100 Lines) ==='"
          docker exec cmm_el89 bash -c "journalctl -u mariadb --no-pager -n 100 || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== /etc/my.cnf Configuration ==='"
          docker exec cmm_el89 bash -c "cat /etc/my.cnf"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== MariaDB Plugins (if accessible) ==='"
          docker exec cmm_el89 bash -c 'mysql -t -e "SELECT * FROM mysql.plugin;" 2>&1 || echo "MariaDB not accessible for query"'
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Debug MariaDB setup
        run: |
          docker exec cmm_el89 bash -c "echo '=== MariaDB Data Directory ==='"
          docker exec cmm_el89 bash -c "ls -lAhrt /var/lib/mysql"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== MariaDB Error Logs (if any) ==='"
          docker exec cmm_el89 bash -c "cat /var/lib/mysql/*.err 2>/dev/null || echo 'No .err files found in /var/lib/mysql/'"
          docker exec cmm_el89 bash -c "cat /var/log/mysqld.log 2>/dev/null || echo 'No /var/log/mysqld.log file'"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Full MariaDB Systemd Journal (Last 200 Lines) ==='"
          docker exec cmm_el89 bash -c "journalctl -u mariadb --no-pager -n 200 || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== MariaDB Systemd Service Status (Detailed) ==='"
          docker exec cmm_el89 bash -c "systemctl status mariadb.service -l --no-pager || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== MariaDB Systemd Drop-in Files ==='"
          docker exec cmm_el89 bash -c "ls -lAh /etc/systemd/system/mariadb.service.d/ || echo 'No drop-in directory'"
          docker exec cmm_el89 bash -c "cat /etc/systemd/system/mariadb.service.d/*.conf || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== MariaDB Socket Check ==='"
          docker exec cmm_el89 bash -c "ls -lah /var/lib/mysql/mysql.sock || echo 'Socket file does not exist'"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== MariaDB Process Check ==='"
          docker exec cmm_el89 bash -c "ps aux | grep -E 'maria|mysql' | grep -v grep || echo 'No MariaDB processes running'"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Attempt MariaDB Service Restart
        run: |
          docker exec cmm_el89 bash -c "echo '=== Attempting to Start MariaDB ==='"
          docker exec cmm_el89 bash -c "systemctl start mariadb.service"
          docker exec cmm_el89 bash -c "echo 'Waiting 5 seconds...'"
          sleep 5
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== MariaDB Status After Start Attempt ==='"
          docker exec cmm_el89 bash -c "systemctl status mariadb.service --no-pager || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== MariaDB Journal After Start Attempt (Last 50 Lines) ==='"
          docker exec cmm_el89 bash -c "journalctl -u mariadb --no-pager -n 50 || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "mysqladmin var | tr -s ' ' || true "
        continue-on-error: true

      - name: Install ProxySQL from Source (AlmaLinux 10)
        run: |
          docker exec cmm_el89 bash -c "echo '=== Installing ProxySQL from Source ==='"
          docker exec cmm_el89 bash -c "/home/proxysql_install.sh 2>&1 | tee /root/centminlogs/proxysql-install.log"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Verify ProxySQL Installation
        run: |
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Version ==='"
          docker exec cmm_el89 bash -c "/usr/bin/proxysql --version || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Service Status ==='"
          docker exec cmm_el89 bash -c "systemctl status proxysql.service --no-pager || true"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Configure ProxySQL Backend and Users
        run: |
          docker exec cmm_el89 bash -c "echo '=== Creating MariaDB Monitoring User ==='"
          docker exec cmm_el89 bash -c "mariadb -e \"CREATE USER IF NOT EXISTS 'proxysql_monitor'@'%' IDENTIFIED BY 'monitor123'; GRANT USAGE, REPLICATION CLIENT ON *.* TO 'proxysql_monitor'@'%';\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Creating MariaDB Application User ==='"
          docker exec cmm_el89 bash -c "mariadb -e \"CREATE USER IF NOT EXISTS 'proxyuser'@'%' IDENTIFIED BY 'proxypass123'; GRANT ALL PRIVILEGES ON *.* TO 'proxyuser'@'%';\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Configuring ProxySQL ==='"
          docker exec cmm_el89 bash -c "sleep 5"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"INSERT INTO mysql_servers(hostgroup_id, hostname, port, max_connections) VALUES (10, '127.0.0.1', 3306, 200);\" || true"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"UPDATE global_variables SET variable_value='proxysql_monitor' WHERE variable_name='mysql-monitor_username';\" || true"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"UPDATE global_variables SET variable_value='monitor123' WHERE variable_name='mysql-monitor_password';\" || true"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"INSERT INTO mysql_users(username, password, default_hostgroup, transaction_persistent) VALUES ('proxyuser', 'proxypass123', 10, 1);\" || true"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"LOAD MYSQL SERVERS TO RUNTIME; SAVE MYSQL SERVERS TO DISK;\" || true"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"LOAD MYSQL VARIABLES TO RUNTIME; SAVE MYSQL VARIABLES TO DISK;\" || true"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"LOAD MYSQL USERS TO RUNTIME; SAVE MYSQL USERS TO DISK;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Verify ProxySQL Configuration
        run: |
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Backend Servers ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e 'SELECT * FROM mysql_servers;' || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Users ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e 'SELECT username, default_hostgroup FROM mysql_users;' || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Global Variables (Connection Settings) ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT variable_name, variable_value FROM global_variables WHERE variable_name LIKE 'mysql-%connection%' OR variable_name LIKE 'mysql-monitor%';\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Test ProxySQL to MariaDB Connection
        run: |
          docker exec cmm_el89 bash -c "echo '=== Direct MariaDB Connection Test (Port 3306) ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 3306 -e 'SELECT VERSION(), @@hostname, CONNECTION_ID();' || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Proxied Connection Test (Port 6033) ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 6033 -e 'SELECT VERSION(), @@hostname, CONNECTION_ID();' || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Connection Pooling Test (5 Sequential Connections) ==='"
          docker exec cmm_el89 bash -c "for i in {1..5}; do echo \"Connection \$i:\"; mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 6033 -e \"SELECT CONNECTION_ID() AS conn_id, 'Request \$i' AS request;\"; done || true"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Monitor ProxySQL Backend Health and Statistics
        run: |
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Connection Pool Stats ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e 'SELECT * FROM stats_mysql_connection_pool;' || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Ping Health Checks ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e 'SELECT * FROM monitor.mysql_server_ping_log ORDER BY time_start_us DESC LIMIT 5;' || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Connect Health Checks ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e 'SELECT * FROM monitor.mysql_server_connect_log ORDER BY time_start_us DESC LIMIT 5;' || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Query Digest Stats ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e 'SELECT * FROM stats_mysql_query_digest ORDER BY sum_time DESC LIMIT 10;' || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Commands Stats ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e 'SELECT * FROM stats_mysql_commands_counters WHERE Total_cnt > 0 ORDER BY Total_cnt DESC;' || true"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Enable ProxySQL Query Cache
        run: |
          docker exec cmm_el89 bash -c "echo '=== Configuring ProxySQL Query Cache ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"UPDATE global_variables SET variable_value='256' WHERE variable_name='mysql-query_cache_size_MB';\" || true"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"UPDATE global_variables SET variable_value='true' WHERE variable_name='mysql-query_cache_store_empty_result';\" || true"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"LOAD MYSQL VARIABLES TO RUNTIME; SAVE MYSQL VARIABLES TO DISK;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Query Cache Configuration ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT variable_name, variable_value FROM global_variables WHERE variable_name LIKE '%cache%';\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Create ProxySQL Query Cache Rules
        run: |
          docker exec cmm_el89 bash -c "echo '=== Creating Test Database for Cache Testing ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 3306 -e \"CREATE DATABASE IF NOT EXISTS cachetest; USE cachetest; CREATE TABLE IF NOT EXISTS products (id INT PRIMARY KEY, name VARCHAR(100), price DECIMAL(10,2)); INSERT INTO products VALUES (1, 'Product A', 19.99), (2, 'Product B', 29.99), (3, 'Product C', 39.99) ON DUPLICATE KEY UPDATE name=VALUES(name);\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Generating Query Digest ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 6033 -e \"SELECT * FROM cachetest.products;\" || true"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT digest, digest_text FROM stats_mysql_query_digest WHERE digest_text LIKE '%cachetest%' ORDER BY last_seen DESC LIMIT 5;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Creating Cache Rule with 10 Second TTL ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"INSERT INTO mysql_query_rules (rule_id, active, match_pattern, destination_hostgroup, cache_ttl, apply) VALUES (100, 1, '^SELECT.*FROM cachetest\\\\.products', 10, 10000, 1);\" || true"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"LOAD MYSQL QUERY RULES TO RUNTIME; SAVE MYSQL QUERY RULES TO DISK;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Verify Cache Rules ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT s.rule_id, s.hits, r.match_pattern, r.cache_ttl FROM stats_mysql_query_rules s JOIN mysql_query_rules r ON s.rule_id = r.rule_id WHERE r.cache_ttl > 0 ORDER BY s.hits DESC;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Test ProxySQL Query Cache Effectiveness
        run: |
          docker exec cmm_el89 bash -c "echo '=== Query Cache Performance Test ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT * FROM stats.stats_mysql_query_digest_reset;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Baseline: First Query Execution (Cache MISS) ==='"
          docker exec cmm_el89 bash -c "time mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 6033 -e \"SELECT * FROM cachetest.products WHERE price > 20;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Cache Hit Test: Execute Same Query 5 Times ==='"
          docker exec cmm_el89 bash -c "for i in {1..5}; do echo \"Query \$i:\"; time mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 6033 -e \"SELECT * FROM cachetest.products WHERE price > 20;\"; done || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Cache Statistics ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT Variable_name, Variable_Value FROM stats_mysql_global WHERE Variable_name LIKE 'Query_Cache%';\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Query Rule Hits (Should Show 5+ Hits) ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT s.rule_id, s.hits, r.match_pattern, r.cache_ttl FROM stats_mysql_query_rules s JOIN mysql_query_rules r ON s.rule_id = r.rule_id WHERE r.cache_ttl > 0 ORDER BY s.hits DESC;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Backend Connection Pool (Should Show Minimal Query Increase) ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT hostgroup, srv_host, Queries, Bytes_data_sent, Bytes_data_recv FROM stats_mysql_connection_pool;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Test ProxySQL Cache TTL Expiration
        run: |
          docker exec cmm_el89 bash -c "echo '=== Cache TTL Expiration Test ==='"
          docker exec cmm_el89 bash -c "echo '=== Execute Query to Populate Cache ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 6033 -e \"SELECT COUNT(*) as total_products FROM cachetest.products;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Cache Entries Before TTL Expiration ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT Variable_name, Variable_Value FROM stats_mysql_global WHERE Variable_name LIKE 'Query_Cache_Entries';\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Waiting 12 Seconds (TTL=10s + 2s buffer) for Cache Expiration ==='"
          sleep 12
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Cache Entries After TTL Expiration (Should Be Lower) ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT Variable_name, Variable_Value FROM stats_mysql_global WHERE Variable_name LIKE 'Query_Cache_Entries';\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Execute Query Again (Should Be Cache MISS After Expiration) ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 6033 -e \"SELECT COUNT(*) as total_products FROM cachetest.products;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Test Cache Behavior on Data Modification
        run: |
          docker exec cmm_el89 bash -c "echo '=== Cache Invalidation Test (Data Modification) ==='"
          docker exec cmm_el89 bash -c "echo '=== Execute Query to Populate Cache ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 6033 -e \"SELECT * FROM cachetest.products WHERE id = 1;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Modify Data in Backend MariaDB (Bypassing ProxySQL Cache) ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 3306 -e \"UPDATE cachetest.products SET price = 99.99 WHERE id = 1;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Execute Same Query Again (Will Return STALE Cached Data) ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 6033 -e \"SELECT * FROM cachetest.products WHERE id = 1;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Direct Backend Query (Shows Updated Price) ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 3306 -e \"SELECT * FROM cachetest.products WHERE id = 1;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== NOTE: ProxySQL Query Cache has NO automatic invalidation mechanism ==='"
          docker exec cmm_el89 bash -c "echo '=== Cache entries only expire via TTL timeout ==='"
          docker exec cmm_el89 bash -c "echo '=== This is documented behavior - best for read-heavy workloads with tolerable staleness ==='"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Test ProxySQL Prepared Statements Cache
        run: |
          docker exec cmm_el89 bash -c "echo '=== Prepared Statements Cache Test ==='"
          docker exec cmm_el89 bash -c "echo '=== Baseline: Prepared Statement Statistics Before Test ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT * FROM stats_mysql_prepared_statements_info;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Execute Prepared Statement Test (PREPARE + EXECUTE x3 + DEALLOCATE) ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 6033 -e \"PREPARE stmt1 FROM 'SELECT * FROM cachetest.products WHERE price > ?'; SET @price_threshold = 20.00; EXECUTE stmt1 USING @price_threshold; EXECUTE stmt1 USING @price_threshold; EXECUTE stmt1 USING @price_threshold; DEALLOCATE PREPARE stmt1;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Re-PREPARE Same Statement (Should Use Global Prepared Statement Cache) ==='"
          docker exec cmm_el89 bash -c "mariadb -u proxyuser -pproxypass123 -h 127.0.0.1 -P 6033 -e \"PREPARE stmt2 FROM 'SELECT * FROM cachetest.products WHERE price > ?'; SET @price_threshold = 30.00; EXECUTE stmt2 USING @price_threshold; DEALLOCATE PREPARE stmt2;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Prepared Statement Statistics After Test ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT * FROM stats_mysql_prepared_statements_info;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Backend Connection Queries (Should Show Prepared Statement Reuse) ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT hostgroup, srv_host, Queries FROM stats_mysql_connection_pool;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== NOTE: Prepared statements have SEPARATE cache from query result cache ==='"
          docker exec cmm_el89 bash -c "echo '=== Prepared statement cache persists statements across frontend close ==='"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: ProxySQL Cache Statistics Summary
        run: |
          docker exec cmm_el89 bash -c "echo '=== ProxySQL Caching Statistics Summary ==='"
          docker exec cmm_el89 bash -c "echo '=== Query Cache Global Status ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT Variable_name, Variable_Value FROM stats_mysql_global WHERE Variable_name LIKE 'Query_Cache%';\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Query Cache Rules and Hit Counts ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT s.rule_id, s.hits, r.active, r.match_pattern, r.cache_ttl FROM stats_mysql_query_rules s JOIN mysql_query_rules r ON s.rule_id = r.rule_id WHERE r.cache_ttl > 0 ORDER BY s.hits DESC;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Cache Configuration Variables ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT variable_name, variable_value FROM global_variables WHERE variable_name LIKE '%cache%' ORDER BY variable_name;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Query Digest Performance (Top 10 by Total Time) ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT digest_text, count_star, sum_time, sum_time/count_star as avg_time_us FROM stats_mysql_query_digest ORDER BY sum_time DESC LIMIT 10;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Backend Connection Pool Final Stats ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT hostgroup, srv_host, status, Queries, ConnUsed, ConnFree, Bytes_data_sent, Bytes_data_recv FROM stats_mysql_connection_pool;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Prepared Statements Cache Stats ==='"
          docker exec cmm_el89 bash -c "mariadb -u admin -padmin -h 127.0.0.1 -P6032 -e \"SELECT * FROM stats_mysql_prepared_statements_info;\" || true"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Run MySQLTuner Analysis
        run: |
          docker exec cmm_el89 bash -c "echo '=== MySQLTuner v2.7.0 MariaDB Performance Analysis ==='"
          docker exec cmm_el89 bash -c "echo '=== Modified by George Liu (eva2000) at https://centminmod.com/ ==='"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Installing Perl Dependencies ==='"
          docker exec cmm_el89 bash -c "dnf install -y perl perl-DBI perl-DBD-MySQL perl-Digest-MD5 perl-Socket || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Running MySQLTuner (MariaDB 11.8 Direct via Socket) ==='"
          docker exec cmm_el89 bash -c "perl /home/mysqltuner.pl --socket /var/lib/mysql/mysql.sock --verbose || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== Running MySQLTuner (MariaDB 11.8 via ProxySQL Port 6033) ==='"
          docker exec cmm_el89 bash -c "perl /home/mysqltuner.pl --host 127.0.0.1 --port 6033 --user proxyuser --pass proxypass123 --verbose || true"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo '=== MySQLTuner Analysis Complete ==='"
          docker exec cmm_el89 bash -c "echo 'NOTE: Memory usage warnings include extended Centmin Mod explanations'"
          docker exec cmm_el89 bash -c "echo 'These explain why theoretical max memory warnings should not be taken literally'"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Inspect Python3 setup
        run: |
          sleep 1
          docker exec cmm_el89 bash -c "python3 --version"
          sleep 1
          docker exec cmm_el89 bash -c "pip --version"
          sleep 1
          docker exec cmm_el89 bash -c "alternatives --list | grep -E -i 'pip|python' || echo 'No match for pip or python keywords'"
        continue-on-error: true

      - name: Inspect Redis Server setup
        run: |
          sleep 1
          docker exec cmm_el89 bash -c "redis-cli info"
          sleep 1
          docker exec cmm_el89 bash -c "systemctl status redis"
          sleep 1
          docker exec cmm_el89 bash -c "php --ri redis"
        continue-on-error: true

      - name: Inspect pure-ftpd setup
        run: |
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "ls -lAh /etc/systemd/system/pure-ftpd.service.d"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "cat /etc/systemd/system/pure-ftpd.service.d/pidfile.conf"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "journalctl -u pure-ftpd --no-pager | tail -n 100"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "systemctl status pure-ftpd.service"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "ls -lAh /etc/ssl/private/pure-ftpd-dhparams.pem || echo '/etc/ssl/private/pure-ftpd-dhparams.pem not yet setup'"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "cat /etc/pure-ftpd/pure-ftpd.conf | grep -E 'UnixAuthentication|VerboseLog|PureDB |CreateHomeDir|TLS|PassivePortRange|TLSCipherSuite|MaxClientsNumber|MaxClientsPerIP|NoAnonymous|Umask'"
        continue-on-error: true

      - name: Inspect chronyd setup
        run: |
          sleep 1
          docker exec cmm_el89 bash -c "journalctl -u chronyd --no-pager | tail -n 100"
          sleep 1
          docker exec cmm_el89 bash -c "systemctl status chronyd.service || echo 'chronyd not supported in docker containers'"
        continue-on-error: true

      - name: Inspect CSF Firewall setup
        run: |
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "grep -E '^TCP_IN|^TCP6_IN' /etc/csf/csf.conf"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "csf -v"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "csf -ra"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "cat /etc/csf/csf.allow"
        continue-on-error: true

      - name: Inspect logrotation setup
        run: |
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "logrotate -dv /etc/logrotate.d/nginx"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "logrotate -dv /etc/logrotate.d/php-fpm"
        continue-on-error: true

      - name: Inspect Sysstat and systemd-journald service
        run: |
          docker exec cmm_el89 bash -c "systemctl status sysstat.service"
          docker exec cmm_el89 bash -c "systemctl status systemd-journald.service"
        continue-on-error: true
    
      - name: Check permissions of /var/log/journal
        run: |
          docker exec cmm_el89 bash -c "ls -ld /var/log/journal || echo '/var/log/journal persistent storage not configured'"
        continue-on-error: true
    
      - name: Show recent systemd-journald logs
        run: |
          docker exec cmm_el89 bash -c "journalctl --unit=systemd-journald.service --no-pager | tail -n 100"
        continue-on-error: true

      - name: Run cminfo
        run: |
          docker exec cmm_el89 bash -c "/usr/local/src/centminmod/tools/cminfo.sh"
        continue-on-error: true

      - name: Run addons/golang.sh
        run: |
          docker exec cmm_el89 bash -c "/usr/local/src/centminmod/addons/golang.sh install"
        continue-on-error: true

      - name: Run addons/nodejs.sh
        run: |
          docker exec cmm_el89 bash -c "/usr/local/src/centminmod/addons/nodejs.sh install"
        continue-on-error: true

      - name: Run addons/opendkim.sh
        run: |
          docker exec cmm_el89 bash -c "/usr/local/src/centminmod/addons/opendkim.sh"
        continue-on-error: true

      - name: Run tools/csfcf.sh
        run: |
          sleep 1
          docker exec cmm_el89 bash -c "/usr/local/src/centminmod/tools/csfcf.sh"
          sleep 1
          docker exec cmm_el89 bash -c "/usr/local/src/centminmod/tools/csfcf.sh auto"
          docker exec cmm_el89 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv4"
          docker exec cmm_el89 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv6"
        continue-on-error: true

      - name: Create Nginx HTTPS vhost
        run: |
          docker exec cmm_el89 bash -c "/usr/bin/nv -d domain.com -s y"
        continue-on-error: true

      - name: Test mysqladmin_shell.sh MySQL Database Management
        run: |
          docker exec cmm_el89 bash -c "echo -e 'dbname dbusername dbpassword\ndb2name db2username db2password' > /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo 'multidb'"
          docker exec cmm_el89 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh multidb /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo 'createuserdb'"
          docker exec cmm_el89 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh createuserdb mydbname mydbuser mydbpass"
          docker exec cmm_el89 bash -c "echo '---'"
          docker exec cmm_el89 bash -c "echo 'showgrants'"
          docker exec cmm_el89 bash -c "echo 'dbusername' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_el89 bash -c "echo 'db2username' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_el89 bash -c "echo 'mydbuser' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_el89 bash -c "echo '---'"
        continue-on-error: true

      - name: Run cmupdate
        run: |
          docker exec cmm_el89 bash -c "cmupdate"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx upgrade test
        run: |
          docker exec cmm_el89 /home/centmin-option-4.sh
          docker exec cmm_el89 bash -c "ccache -s"
        continue-on-error: true

      - name: YUM History Info
        run: |
          docker exec cmm_el89 bash -c "for id in \$(/usr/bin/yum history list | awk '{print \$1}' | grep -E '^[0-9]+$'); do /usr/bin/yum history info \$id; done"
        continue-on-error: true

      - name: Copy AlmaLinux Centmin Mod logs from container
        run: |
          mkdir -p ./centminlogs
          docker exec cmm_el89 tar -C /root/centminlogs -cf - . | tar -C ./centminlogs -xf -

      - name: Upload AlmaLinux Centmin Mod Logs
        uses: actions/upload-artifact@v4
        with:
          name: almalinux_logs
          path: centminlogs/*

  discordNotificationSuccess:
    needs: build
    if: ${{ success() }} # Only run this job if the previous job was successful
    runs-on: ubuntu-latest
    steps:
    - name: Notify Discord Success
      run: |
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{\"content\":\"Workflow '${{ github.workflow }}' was triggered by '${{ github.event_name }}' and completed successfully!\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}

  discordNotificationFailure:
    needs: build
    if: ${{ failure() }} # Only run this job if the previous job was unsuccessful
    runs-on: ubuntu-latest
    steps:
    - name: Notify Discord Failure
      run: |
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{\"content\":\"Workflow '${{ github.workflow }}' was triggered by '${{ github.event_name }}' and failed!\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}
