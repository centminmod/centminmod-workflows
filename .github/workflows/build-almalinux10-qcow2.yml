name: 0 - Build AlmaLinux 10 QCOW2 Image

on:
  workflow_dispatch:

jobs:
  build-qcow2:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients unzip qemu-utils

      - name: Setup Packer
        uses: hashicorp/setup-packer@v3.1.0
        with:
          version: '1.12.0'

      - name: Download ISO & extract checksum
        run: |
          ISO_URL=https://repo.almalinux.org/almalinux/10.0/isos/x86_64/AlmaLinux-10-latest-x86_64-minimal.iso
          ISO_NAME=${ISO_URL##*/}
          curl -sSL -o "$ISO_NAME" "$ISO_URL"
          curl -sSL https://repo.almalinux.org/almalinux/10.0/isos/x86_64/CHECKSUM -o CHECKSUM
          ISO_CHECKSUM=$(grep "SHA256 (${ISO_NAME})" CHECKSUM | awk '{print $4}')
          echo "ISO_NAME=$ISO_NAME" >> $GITHUB_ENV
          echo "ISO_CHECKSUM=$ISO_CHECKSUM" >> $GITHUB_ENV

      - name: Build QCOW2 with Packer
        continue-on-error: true
        env:
          PACKER_LOG: 1
          PACKER_LOG_PATH: packer-debug.log
        run: |
          TEMPLATE=$(find "$GITHUB_WORKSPACE" -type f -name '*.pkr.hcl' | head -n1)
          echo "Using Packer template: $TEMPLATE"
          packer init "$TEMPLATE"
          
          # Start packer build in background
          packer build \
            -on-error=abort \
            -debug \
            -only=qemu.almalinux10 \
            -var iso_url="file://$GITHUB_WORKSPACE/${ISO_NAME}" \
            -var iso_checksum="${ISO_CHECKSUM}" \
            "$TEMPLATE" &
          
          PACKER_PID=$!
          
          # Monitor serial log in parallel
          touch serial.log
          tail -f serial.log &
          TAIL_PID=$!
          
          # Wait for packer to complete
          wait $PACKER_PID
          PACKER_EXIT=$?
          
          # Kill tail process
          kill $TAIL_PID 2>/dev/null || true
          
          exit $PACKER_EXIT

      - name: Display serial console log
        if: always()
        run: |
          if [ -f serial.log ]; then
            echo "=== Serial Console Output ==="
            cat serial.log
          else
            echo "No serial.log found"
          fi

      - name: Upload QCOW2 artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: almalinux-10-qcow2
          path: build/almalinux10/*.qcow2

      - name: Upload Packer debug log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: packer-debug-log
          path: packer-debug.log

      - name: Upload serial console log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: serial-console-log
          path: serial.log

      - name: Mount QCOW2 and extract logs
        if: always()
        run: |
          QCOW=$(find build/almalinux10 -name '*.qcow2' | head -n1)
          if [ -n "$QCOW" ] && [ -f "$QCOW" ]; then
            sudo modprobe nbd max_part=8
            sudo qemu-nbd --connect=/dev/nbd0 "$QCOW"
            sudo partprobe /dev/nbd0
            sudo mkdir -p mnt
            # Try different partition schemes
            for part in /dev/nbd0p1 /dev/nbd0p2 /dev/nbd0p3; do
              if [ -b "$part" ]; then
                echo "Trying to mount $part..."
                if sudo mount "$part" mnt 2>/dev/null; then
                  sudo cp mnt/root/ks-post.log ./ks-post.log 2>/dev/null || echo "ks-post.log not found on $part"
                  sudo umount mnt
                  [ -f ./ks-post.log ] && break
                fi
              fi
            done
            sudo qemu-nbd --disconnect /dev/nbd0
          else
            echo "No QCOW2 image found, skipping mount step"
          fi
        shell: bash

      - name: Upload KS post-install log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ks-post-log
          path: ks-post.log

      - name: Upload QEMU errors log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qemu-errors-log
          path: qemu-errors.log