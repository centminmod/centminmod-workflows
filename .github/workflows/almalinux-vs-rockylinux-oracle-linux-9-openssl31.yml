name: 1 - AlmaLinux 9 vs Rocky Linux 9 vs Oracle Linux 9 + Nginx OpenSSL 3.1 default

on:
  workflow_dispatch:
  repository_dispatch:
    types: [run-almalinux-vs-rockylinux-oraclelinux-9-workflow-openssl31]

jobs:
  almalinux:
    runs-on: ubuntu-20.04
    outputs:
      php_test_status: ${{ steps.php_test.outputs.ALMALINUX_PHP_TEST_STATUS }}
      nginx_test_status: ${{ steps.nginx_test.outputs.ALMALINUX_NGINX_TEST_STATUS }}
      mariadb_test_status: ${{ steps.mariadb_test.outputs.ALMALINUX_MARIADB_TEST_STATUS }}
      csf_test_status: ${{ steps.csf_test.outputs.ALMALINUX_CSF_TEST_STATUS }}
      pureftpd_test_status: ${{ steps.pureftpd_test.outputs.ALMALINUX_PUREFTPD_TEST_STATUS }}
      redis_test_status: ${{ steps.redis_test.outputs.ALMALINUX_REDIS_TEST_STATUS }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Sysbox
        run: |
          curl -LO https://downloads.nestybox.com/sysbox/releases/v0.6.2/sysbox-ce_0.6.2-0.linux_amd64.deb
          sudo dpkg -i sysbox-ce_0.6.2-0.linux_amd64.deb || sudo apt-get install -f

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build 
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfiles/Dockerfile-almalinux9
          platforms: linux/amd64
          load: true
          tags: cmm_almalinux9:latest

      - name: Debug payload (repository_dispatch)
        run: echo ${{ github.event.client_payload.release }}
        
      - name: Debug input (workflow_dispatch)
        run: echo ${{ github.event.inputs.release }}
  
      - name: Run container Centmmin Mod LEMP AlmaLinux 9 Install
        run: |
          docker run -d --name=cmm_almalinux9 --runtime=sysbox-runc --cap-add=SYS_ADMIN --security-opt seccomp=unconfined --security-opt label=disable --security-opt apparmor=unconfined -v /tmp/$(mktemp -d):/run -v /sys/fs/cgroup:/sys/fs/cgroup:ro cmm_almalinux9:latest
          sleep 4
          docker exec cmm_almalinux9 bash -c "cat /etc/os-release"
          docker exec cmm_almalinux9 bash -c "mkdir -p /etc/centminmod"
          docker exec cmm_almalinux9 bash -c "touch /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "sed -i '/^OPENSSL_SYSTEM_USE=n$/d' /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'OPENSSL_SYSTEM_USE=n' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'OPENSSL_VERSION=3.1.6' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'OPENSSL_VERSIONFALLBACK=3.1.6' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'OPENSSL_VERSION_OLDOVERRIDE=3.1.6' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "curl -4sL https://centminmod.com/betainstaller.sh | bash" | tee cmm-install.log
          output=$(tail -20 cmm-install.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: Display Centmmin Mod LEMP Install Log
        run: |
          echo "Last 20 lines of Centmmin Mod LEMP Install Log:"
          echo "----------------------------------------"
          tail -20 cmm-install.log
          echo "----------------------------------------"
        continue-on-error: true

      - name: Nginx Configure
        run: |
          docker exec cmm_almalinux9 bash -c "cat /root/centminlogs/nginx-configure-*"
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: Nginx Patches
        run: |
          docker exec cmm_almalinux9 bash -c "cat /root/centminlogs/patch_patchnginx-*"
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: PHP-FPM Patches
        run: |
          docker exec cmm_almalinux9 bash -c "cat /root/centminlogs/patch_php-*"
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Centmin Mod Disk Usage Analysis
        run: |
          docker exec cmm_almalinux9 bash -c "du -sh /svr-setup"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "df -hT"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "rpm -qa --queryformat '%10{size} - %-25{name} \t %{version}\n' | sort -n"
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: centmin.sh setup
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "echo '1' > /etc/centminmod/email-primary.ini"
          docker exec cmm_almalinux9 bash -c "echo '2' > /etc/centminmod/email-secondary.ini"
        continue-on-error: true
  
      - name: YUM repolist all
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "yum repolist all" | tee cmm-yumrepolist.log
          output=$(cat cmm-yumrepolist.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true
  
      - name: Inspect wget install
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "/usr/bin/wget -V"
          sleep 1
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/wget -V" | tee cmm-wget.log
          output=$(cat cmm-wget.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
  
      - name: Inspect ccache install
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/ccache -V" | tee cmm-ccache.log
          output=$(cat cmm-ccache.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY
          sleep 1
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/ccache -s"
          sleep 1
          docker exec cmm_almalinux9 bash -c "grep ccache ~/.bashrc"
        continue-on-error: true
  
      - name: Inspect PHP-FPM setup
        id: php_test
        run: |
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "systemctl status php-fpm.service --no-pager" && echo "ALMALINUX_PHP_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_PHP_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_PHP_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_PHP_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_PHP_TEST_STATUS=$ALMALINUX_PHP_TEST_STATUS" | tee cmm-phpstatus.log
          output=$(cat cmm-phpstatus.log)
          echo "AlmaLinux PHP Status: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "php -v" | tee cmm-phpver.log
          outputver=$(cat cmm-phpver.log)
          echo "AlmaLinux PHP Version: $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "php-config || true" | tee cmm-phpconfig.log && outputphpconfig=$(cat cmm-phpconfig.log) && echo "$outputphpconfig" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ini" | tee cmm-phpini.log && outputphpini=$(cat cmm-phpini.log) && echo "$outputphpini" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Inspect Nginx setup
        id: nginx_test
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_almalinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_almalinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_almalinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ALMALINUX_NGINX_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_NGINX_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_NGINX_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_NGINX_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_NGINX_TEST_STATUS=$ALMALINUX_NGINX_TEST_STATUS" | tee cmm-nginxstatus.log
          output=$(cat cmm-nginxstatus.log)
          echo "AlmaLinux Nginx Status: $output" >> $GITHUB_STEP_SUMMARY
          sleep 1
          docker exec cmm_almalinux9 bash -c "curl -I http://localhost"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxver.log
          outputver=$(cat cmm-nginxver.log)
          echo "AlmaLinux $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginx.log && outputlddnginx=$(cat cmm-lddnginx.log) && echo "$outputlddnginx" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Inspect MariaDB setup
        id: mariadb_test
        run: |
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "systemctl status mariadb.service --no-pager" && echo "ALMALINUX_MARIADB_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_MARIADB_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_MARIADB_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_MARIADB_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_MARIADB_TEST_STATUS=$ALMALINUX_MARIADB_TEST_STATUS" | tee cmm-mariadbstat.log
          output=$(cat cmm-mariadbstat.log)
          echo "AlmaLinux MariaDB Status: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "cat /etc/my.cnf" | tee cmm-mycnf.log && outputmycnf=$(cat cmm-mycnf.log) && echo -e "```\n$outputmycnf\n```" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c 'mysql -t -e "SELECT * FROM mysql.plugin;"' | tee cmm-mariadbplugins1.log && outputmariadbplugins1=$(cat cmm-mariadbplugins1.log) && echo -e "```\n$outputmariadbplugins1\n```" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c 'mysql -t -e "SHOW PLUGINS;"' | tee cmm-mariadbplugins2.log && outputmariadbplugins2=$(cat cmm-mariadbplugins2.log) && echo -e "```\n$outputmariadbplugins2\n```" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "mysqladmin var | tr -s ' '"
          docker exec cmm_almalinux9 bash -c "mysqladmin ver" | tee cmm-mariadbver.log
          outputver=$(cat cmm-mariadbver.log)
          echo "AlmaLinux MariaDB Version: $outputver" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
  
      - name: Inspect Python3 setup
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "python3 --version" | tee cmm-pythonver.log
          output=$(cat cmm-pythonver.log)
          echo "AlmaLinux Python Version: $output" >> $GITHUB_STEP_SUMMARY
          sleep 1
          docker exec cmm_almalinux9 bash -c "pip --version"
          sleep 1
          docker exec cmm_almalinux9 bash -c "alternatives --list | egrep -i 'pip|python' || echo 'No match for pip or python keywords'"
        continue-on-error: true
  
      - name: Inspect Redis Server setup
        id: redis_test
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "redis-cli info" | tee cmm-redisinfo.log && outputredisinfo=$(cat cmm-redisinfo.log) && echo "$outputredisinfo" >> $GITHUB_STEP_SUMMARY 
          sleep 1
          docker exec cmm_almalinux9 bash -c "systemctl status redis" && echo "ALMALINUX_REDIS_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_REDIS_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_REDIS_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_REDIS_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_REDIS_TEST_STATUS=$ALMALINUX_REDIS_TEST_STATUS"
          sleep 1
          docker exec cmm_almalinux9 bash -c "php --ri redis" | tee cmm-phpredis.log && outputphpredis=$(cat cmm-phpredis.log) && echo "$outputphpredis" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true
  
      - name: Inspect pure-ftpd setup
        id: pureftpd_test
        run: |
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ls -lAh /etc/systemd/system/pure-ftpd.service.d"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "cat /etc/systemd/system/pure-ftpd.service.d/pidfile.conf"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "journalctl -u pure-ftpd --no-pager | tail -n 100"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "systemctl status pure-ftpd.service --no-pager" && echo "ALMALINUX_PUREFTPD_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_PUREFTPD_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_PUREFTPD_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_PUREFTPD_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_PUREFTPD_TEST_STATUS=$ALMALINUX_PUREFTPD_TEST_STATUS" | tee cmm-pureftpdtest.log
          output=$(cat cmm-pureftpdtest.log)
          echo "AlmaLinux Pure-FTPD Status Test: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ls -lAh /etc/ssl/private/pure-ftpd-dhparams.pem || echo '/etc/ssl/private/pure-ftpd-dhparams.pem not yet setup'"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "cat /etc/pure-ftpd/pure-ftpd.conf | egrep 'UnixAuthentication|VerboseLog|PureDB |CreateHomeDir|TLS|PassivePortRange|TLSCipherSuite|MaxClientsNumber|MaxClientsPerIP|NoAnonymous|Umask'"
        continue-on-error: true
  
      - name: Inspect chronyd setup
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "journalctl -u chronyd --no-pager | tail -n 100"
          sleep 1
          docker exec cmm_almalinux9 bash -c "systemctl status chronyd.service || echo 'chronyd not supported in docker containers'"
        continue-on-error: true
  
      - name: Inspect CSF Firewall setup
        id: csf_test
        run: |
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "egrep '^TCP_IN|^TCP6_IN' /etc/csf/csf.conf"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "grep 'MM_LICENSE_KEY' /etc/csf/csf.conf"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "csf -v" | tee cmm-csfver.log && outputcsfver=$(cat cmm-csfver.log) && echo "$outputcsfver" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "csf -ra"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "cat /etc/csf/csf.allow"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "systemctl status csf.service --no-pager" && echo "ALMALINUX_CSF_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_CSF_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_CSF_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_CSF_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_CSF_TEST_STATUS=$ALMALINUX_CSF_TEST_STATUS" | tee cmm-csftest.log
          output=$(cat cmm-csftest.log)
          echo "AlmaLinux CSF Firewall Status Test: $output" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
  
      - name: Inspect logrotation setup
        run: |
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "logrotate -dv /etc/logrotate.d/nginx"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "logrotate -dv /etc/logrotate.d/php-fpm"
        continue-on-error: true
  
      - name: Inspect Sysstat and systemd-journald service
        run: |
          docker exec cmm_almalinux9 bash -c "systemctl status sysstat.service --no-pager"
          docker exec cmm_almalinux9 bash -c "systemctl status systemd-journald.service --no-pager"
        continue-on-error: true
      
      - name: Check permissions of /var/log/journal
        run: |
          docker exec cmm_almalinux9 bash -c "ls -ld /var/log/journal || echo '/var/log/journal persistent storage not configured'"
        continue-on-error: true
      
      - name: Show recent systemd-journald logs
        run: |
          docker exec cmm_almalinux9 bash -c "journalctl --unit=systemd-journald.service --no-pager | tail -n 100"
        continue-on-error: true
  
      - name: Run cminfo
        run: |
          docker exec cmm_almalinux9 bash -c "/usr/local/src/centminmod/tools/cminfo.sh" | tee cmm-cminfo.log && outputcminfo=$(cat cmm-cminfo.log) && echo -e "```\n$outputcminfo\n```" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: Run cminfo top
        run: |
          docker exec cmm_almalinux9 bash -c "/usr/local/src/centminmod/tools/cminfo.sh top"
        continue-on-error: true
  
      - name: Run addons/golang.sh
        run: |
          docker exec cmm_almalinux9 bash -c "/usr/local/src/centminmod/addons/golang.sh install"
        continue-on-error: true
  
      - name: Run addons/nodejs.sh
        run: |
          docker exec cmm_almalinux9 bash -c "/usr/local/src/centminmod/addons/nodejs.sh install"
        continue-on-error: true
  
      - name: Run addons/opendkim.sh
        run: |
          docker exec cmm_almalinux9 bash -c "/usr/local/src/centminmod/addons/opendkim.sh" | tee cmm-opendkim.log && outputopendkim=$(cat cmm-opendkim.log) && echo -e "```\n$outputopendkim\n```" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true
  
      - name: Run tools/csfcf.sh
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh"
          sleep 1
          docker exec cmm_almalinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh auto"
          docker exec cmm_almalinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv4"
          docker exec cmm_almalinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv6"
        continue-on-error: true
  
      - name: Create Nginx HTTPS vhost
        run: |
          docker exec cmm_almalinux9 bash -c "/usr/bin/nv -d domain.com -s y" | tee cmm-nginxvhost.log && outputnginxvhost=$(cat cmm-nginxvhost.log) && echo -e "```\n$outputnginxvhost\n```" >> $GITHUB_STEP_SUMMARY 
          # docker exec cmm_almalinux9 bash -c 'CNIP=$(curl -s -A "Centmin Mod Github workflow" https://geoip.centminmod.com/v4 | jq -r ".ip") && echo "$CNIP domain.com" >> /etc/hosts'
          docker exec cmm_almalinux9 bash -c 'echo "$(hostname -i) domain.com" >> /etc/hosts'
          docker exec cmm_almalinux9 bash -c "cat /etc/hosts"
        continue-on-error: true
  
      - name: Test mysqladmin_shell.sh MySQL Database Management
        run: |
          docker exec cmm_almalinux9 bash -c "echo -e 'dbname dbusername dbpassword\ndb2name db2username db2password' > /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "echo 'multidb'"
          docker exec cmm_almalinux9 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh multidb /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "echo 'createuserdb'"
          docker exec cmm_almalinux9 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh createuserdb mydbname mydbuser mydbpass"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "echo 'showgrants'"
          docker exec cmm_almalinux9 bash -c "echo 'dbusername' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_almalinux9 bash -c "echo 'db2username' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_almalinux9 bash -c "echo 'mydbuser' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "echo 'setpass'"
          docker exec cmm_almalinux9 bash -c "echo -e 'db2username\nnewusername1newpass' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh setpass"
        continue-on-error: true

      - name: Run cmupdate
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
        continue-on-error: true

      - name: centmin.sh menu option 11 submenu 0 yes
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-11-submenu-0-y.sh
        continue-on-error: true

      - name: centmin.sh menu option 11 submenu 0 no
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-11-submenu-0-n.sh
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL default benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/openssltest.sh openssl111 | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL default benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "pip3 install psrecord; cd /home; git clone https://github.com/centminmod/h2load-benchmarks" || true
          docker exec cmm_almalinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch OpenSSL default upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - OpenSSL default benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'Nginx master branch HTTPS h2load OpenSSL default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx OpenSSL 3.0 upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "touch /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "sed -i '/^OPENSSL_SYSTEM_USE=n$/d' /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'OPENSSL_SYSTEM_USE=n' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'OPENSSL_VERSION=3.0.12' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'OPENSSL_VERSIONFALLBACK=3.0.12' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'OPENSSL_VERSION_OLDOVERRIDE=3.0.12' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL 3.0 benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/openssltest.sh openssl30 | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL 3.0 default benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL 3.0 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch OpenSSL 3.0 default upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - OpenSSL 3.0 default benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'Nginx master branch HTTPS h2load OpenSSL 3.0 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx OpenSSL 3.0 setup
        id: nginxopensslthree_test
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_almalinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_almalinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_almalinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS=$ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS"
          sleep 1
          docker exec cmm_almalinux9 bash -c "curl -I http://localhost"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxopensslthree.log
          output=$(cat cmm-nginxopensslthree.log)
          echo "AlmaLinux Nginx OpenSSL 3.0 Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxopensslthree.log && outputlddnginxopensslthree=$(cat cmm-lddnginxopensslthree.log) && echo "$outputlddnginxopensslthree" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx OpenSSL 1.1.1 upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'OPENSSL_VERSION=1.1.1w' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'OPENSSL_VERSIONFALLBACK=1.1.1w' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'OPENSSL_VERSION_OLDOVERRIDE=1.1.1w' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL 1.1.1 benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/openssltest.sh openssl30 | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL 1.1.1 default benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL 1.1.1 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch OpenSSL 1.1.1 default upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - OpenSSL 1.1.1 default benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'Nginx master branch HTTPS h2load OpenSSL 1.1.1 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx OpenSSL 1.1.1 setup
        id: nginxopensslthreeone_test
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_almalinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_almalinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_almalinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS=$ALMALINUX_NGINXOPENSSLTHREE_TEST_STATUS"
          sleep 1
          docker exec cmm_almalinux9 bash -c "curl -I http://localhost"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxopensslthree.log
          output=$(cat cmm-nginxopensslthree.log)
          echo "AlmaLinux Nginx OpenSSL 1.1.1 Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxopensslthree.log && outputlddnginxopensslthree=$(cat cmm-lddnginxopensslthree.log) && echo "$outputlddnginxopensslthree" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx official zlib upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'CLOUDFLARE_ZLIB=n' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: Nginx HTTPS h2load - official zlib benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'Nginx HTTPS h2load official zlib benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx official zlib setup
        id: nginxzlib_test
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_almalinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_almalinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_almalinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ALMALINUX_NGINXZLIB_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_NGINXZLIB_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_NGINXZLIB_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_NGINXZLIB_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_NGINXZLIB_TEST_STATUS=$ALMALINUX_NGINXZLIB_TEST_STATUS"
          sleep 1
          docker exec cmm_almalinux9 bash -c "curl -I http://localhost"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxzlib.log
          output=$(cat cmm-nginxzlib.log)
          echo "AlmaLinux Nginx official zlib Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxzlib.log && outputlddnginxzlib=$(cat cmm-lddnginxzlib.log) && echo "$outputlddnginxzlib" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx HTTP/3 QuicTLS upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'NGINX_QUIC_SUPPORT=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'CLOUDFLARE_ZLIB=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL QuicTLS benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/openssltest.sh opensslquic | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL QuicTLS benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL QuicTLS benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx HTTP/3 QuicTLS setup
        id: nginxquic_test
        run: |
          sleep 1
          docker exec cmm_almalinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_almalinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_almalinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_almalinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ALMALINUX_NGINXQUIC_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_NGINXQUIC_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_NGINXQUIC_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_NGINXQUIC_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_NGINXQUIC_TEST_STATUS=$ALMALINUX_NGINXQUIC_TEST_STATUS"
          sleep 1
          docker exec cmm_almalinux9 bash -c "curl -I http://localhost"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxquicver.log
          output=$(cat cmm-nginxquicver.log)
          echo "AlmaLinux Nginx HTTP/3 QUIC Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginx.log && outputlddnginx=$(cat cmm-lddnginx.log) && echo "$outputlddnginx" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx BoringSSL Post-Quantum KEX upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'BORINGSSL_SWITCH=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "sed -i 's|NGINX_QUIC_SUPPORT=y|NGINX_QUIC_SUPPORT=n|' /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-4.sh
          docker exec cmm_almalinux9 bash -c "sed -i 's|listen 443 ssl;|listen 443 ssl default_server;|g' /usr/local/nginx/conf/conf.d/domain.com.ssl.conf"
          docker exec cmm_almalinux9 bash -c "sed -i '/ssl_prefer_server_ciphers   on;/a \  ssl_ecdh_curve X25519Kyber768Draft00:X25519;' /usr/local/nginx/conf/conf.d/domain.com.ssl.conf"
          docker exec cmm_almalinux9 bash -c "nginx -t"
          docker exec cmm_almalinux9 bash -c "systemctl restart nginx"
        continue-on-error: true

      - name: OpenSSL BoringSSL benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/openssltest.sh boringssl | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - BoringSSL benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'Nginx HTTPS h2load BoringSSL benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx BoringSSL Post-Quantum KEX setup
        id: nginxboringssl_test
        run: |
          docker exec cmm_almalinux9 bash -c "cat /usr/local/nginx/conf/conf.d/domain.com.ssl.conf"
          docker exec cmm_almalinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_almalinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_almalinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_almalinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ALMALINUX_NGINXBORINGSSL_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_NGINXBORINGSSL_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_NGINXBORINGSSL_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_NGINXBORINGSSL_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_NGINXBORINGSSL_TEST_STATUS=$ALMALINUX_NGINXBORINGSSL_TEST_STATUS"
          sleep 1
          docker exec cmm_almalinux9 bash -c "curl -Ik https://domain.com"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "curl -sIkv https://domain.com"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c 'echo | bssl client -server-name domain.com -connect domain.com:443 -curves X25519:X25519Kyber768Draft00 -debug'
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxboringsslver.log
          output=$(cat cmm-nginxboringsslver.log)
          echo "AlmaLinux Nginx BoringSSL Post-Quantum KEX Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxboringssl.log && outputlddnginxboringssl=$(cat cmm-lddnginxboringssl.log) && echo "$outputlddnginxboringssl" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch BoringSSL Post-Quantum KEX upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - BoringSSL Post-Quantum KEX benchmarks test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'Nginx master branch HTTPS h2load BoringSSL Post-Quantum KEX benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_almalinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: OpenSSL benchmark tests summary
        run: |
          docker exec cmm_almalinux9 bash -c "cat /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load benchmark tests summary
        run: |
          docker exec cmm_almalinux9 bash -c "cat /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 7.4 upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-5-php7.4.sh
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 7.4 phpbench.php
        run: |
          docker exec cmm_almalinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.0 upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-5.sh
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.0 phpbench.php
        run: |
          docker exec cmm_almalinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.1 upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "echo '#LIBZIP_VER=1.7.3' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "echo 'LIBZIP_VER=1.10.1' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-5-php8.1.sh
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.1 phpbench.php
        run: |
          docker exec cmm_almalinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true


      - name: MariaDB SSL Setup test
        run: |
          docker exec cmm_almalinux9 /home/mariadb-ssl-setup.sh ecdsa 127.0.0.1
        continue-on-error: true

      - name: sysbench test
        run: |
          docker exec cmm_almalinux9 /home/sysbench-run.sh
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.2 upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-5-php8.2.sh
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.2 phpbench.php
        run: |
          docker exec cmm_almalinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true


      - name: Inspect PHP-FPM 8.2 setup
        id: php82_test
        run: |
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "systemctl status php-fpm.service --no-pager" && echo "ALMALINUX_PHP_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_PHP_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_PHP_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_PHP_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_PHP_TEST_STATUS=$ALMALINUX_PHP_TEST_STATUS"
          docker exec cmm_almalinux9 bash -c "php -v" | tee cmm-phpver.log
          outputver=$(cat cmm-phpver.log)
          echo "AlmaLinux PHP 8.2 Version: $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "php-config || true" | tee cmm-phpconfig.log && outputphpconfig=$(cat cmm-phpconfig.log) && echo "$outputphpconfig" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ini" | tee cmm-phpini.log && outputphpini=$(cat cmm-phpini.log) && echo "$outputphpini" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.3 upgrade test
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-5-php8.3.sh
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.3 phpbench.php
        run: |
          docker exec cmm_almalinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true


      - name: Inspect PHP-FPM 8.3 setup
        id: php83_test
        run: |
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "systemctl status php-fpm.service --no-pager" && echo "ALMALINUX_PHP_TEST_STATUS=0" >> $GITHUB_ENV && echo "ALMALINUX_PHP_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ALMALINUX_PHP_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ALMALINUX_PHP_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ALMALINUX_PHP_TEST_STATUS=$ALMALINUX_PHP_TEST_STATUS"
          docker exec cmm_almalinux9 bash -c "php -v" | tee cmm-phpver.log
          outputver=$(cat cmm-phpver.log)
          echo "AlmaLinux PHP 8.3 Version: $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "php-config || true" | tee cmm-phpconfig.log && outputphpconfig=$(cat cmm-phpconfig.log) && echo "$outputphpconfig" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ini" | tee cmm-phpini.log && outputphpini=$(cat cmm-phpini.log) && echo "$outputphpini" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_almalinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: centmin.sh menu option 5 PHP-FPM + PostgreSQL 16 Install test
        run: |
          docker exec cmm_almalinux9 bash -c "echo 'POSTGRESQL=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_almalinux9 bash -c "cmupdate"
          docker exec cmm_almalinux9 /home/centmin-option-5-php8.1.sh
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphppostgresql.log && outputlddphppostgresql=$(cat cmm-lddphppostgresql.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphppostgresql" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgradepostgresql.log && outputphpverupgradepostgresql=$(cat cmm-phpverupgradepostgresql.log) && echo -e "php -v\n$outputphpverupgradepostgresql" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "chown postgres:postgres /var/lib/pgsql/16/data/" || true
          docker exec cmm_almalinux9 bash -c "systemctl restart postgresql-16" || true
          docker exec cmm_almalinux9 bash -c "systemctl status postgresql-16 --no-pager" || true
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri pgsql" || true
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/pgsql-16/bin/pg_config" || true
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "rpm -ql postgresql16-server postgresql16 | grep bin" || true
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "cat /var/lib/pgsql/16/data/log/postgresql-*.log" || true
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqlnd" || true
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri mysqli" || true
          docker exec cmm_almalinux9 bash -c "echo '---'"
          docker exec cmm_almalinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzippostgresql.log && outputphpzippostgresql=$(cat cmm-phpzippostgresql.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzippostgresql" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.1 phpbench.php
        run: |
          docker exec cmm_almalinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true

      - name: Run cmupdate
        run: |
          docker exec cmm_almalinux9 bash -c "cmupdate"
        continue-on-error: true
  
      - name: YUM History Info
        run: |
          docker exec cmm_almalinux9 bash -c "for id in \$(/usr/bin/yum history list | awk '{print \$1}' | grep -E '^[0-9]+$'); do /usr/bin/yum history info \$id; done"
        continue-on-error: true

      - name: Generate AlmaLinux package and repo lists
        run: |
          mkdir artifacts
          docker exec cmm_almalinux9 yum list installed | sort | tr -s ' ' | tee artifacts/almalinux_packages.txt
          docker exec cmm_almalinux9 yum list installed | sort | tr -s ' ' | awk '{print $1 " " $2}' | tee artifacts/almalinux_packages_filtered.txt
          docker exec cmm_almalinux9 yum repolist all | tee artifacts/almalinux_repos.txt
          docker exec cmm_almalinux9 repoquery --queryformat='%{buildtime} %{name}-%{version}-%{release}' --all 2>&1 | sort -k3 | sed '1d' | tee artifacts/almalinux_repoquery.txt
          docker exec cmm_almalinux9 rpm -qi --changelog kernel-$(yum list installed | grep kernel | grep -v "kernel-tools" | sort -r | head -n 1 | awk '{print $2}') | head -n40 | tee artifacts/almalinux_kernel-version.txt

      - name: Upload AlmaLinux package and repo lists
        uses: actions/upload-artifact@v4
        with:
          name: almalinux_lists
          path: artifacts/*

      - name: Copy AlmaLinux Centmin Mod logs from container
        run: |
          mkdir -p ./centminlogs
          docker cp cmm_almalinux9:/root/centminlogs ./centminlogs

      - name: Upload AlmaLinux Centmin Mod Logs
        uses: actions/upload-artifact@v4
        with:
          name: almalinux_logs
          path: centminlogs/*

  rockylinux:
    runs-on: ubuntu-20.04
    outputs:
      php_test_status: ${{ steps.php_test.outputs.ROCKYLINUX_PHP_TEST_STATUS }}
      nginx_test_status: ${{ steps.nginx_test.outputs.ROCKYLINUX_NGINX_TEST_STATUS }}
      mariadb_test_status: ${{ steps.mariadb_test.outputs.ROCKYLINUX_MARIADB_TEST_STATUS }}
      csf_test_status: ${{ steps.csf_test.outputs.ROCKYLINUX_CSF_TEST_STATUS }}
      pureftpd_test_status: ${{ steps.pureftpd_test.outputs.ROCKYLINUX_PUREFTPD_TEST_STATUS }}
      redis_test_status: ${{ steps.redis_test.outputs.ROCKYLINUX_REDIS_TEST_STATUS }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Sysbox
        run: |
          curl -LO https://downloads.nestybox.com/sysbox/releases/v0.6.2/sysbox-ce_0.6.2-0.linux_amd64.deb
          sudo dpkg -i sysbox-ce_0.6.2-0.linux_amd64.deb || sudo apt-get install -f

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build 
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfiles/Dockerfile-rockylinux9
          platforms: linux/amd64
          load: true
          tags: cmm_rockylinux9:latest
  
      - name: Debug payload (repository_dispatch)
        run: echo ${{ github.event.client_payload.release }}
        
      - name: Debug input (workflow_dispatch)
        run: echo ${{ github.event.inputs.release }}
  
      - name: Run container Centmmin Mod LEMP Rocky Linux 9 Install
        run: |
          docker run -d --name=cmm_rockylinux9 --runtime=sysbox-runc --cap-add=SYS_ADMIN --security-opt seccomp=unconfined --security-opt label=disable --security-opt apparmor=unconfined -v /tmp/$(mktemp -d):/run -v /sys/fs/cgroup:/sys/fs/cgroup:ro cmm_rockylinux9:latest
          sleep 4
          docker exec cmm_rockylinux9 bash -c "cat /etc/os-release"
          docker exec cmm_rockylinux9 bash -c "mkdir -p /etc/centminmod"
          docker exec cmm_rockylinux9 bash -c "touch /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "sed -i '/^OPENSSL_SYSTEM_USE=n$/d' /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'OPENSSL_SYSTEM_USE=n' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'OPENSSL_VERSION=3.1.6' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'OPENSSL_VERSIONFALLBACK=3.1.6' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'OPENSSL_VERSION_OLDOVERRIDE=3.1.6' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "curl -4sL https://centminmod.com/betainstaller.sh | bash" | tee cmm-install.log
          output=$(tail -20 cmm-install.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: Display Centmmin Mod LEMP Install Log
        run: |
          echo "Last 20 lines of Centmmin Mod LEMP Install Log:"
          echo "----------------------------------------"
          tail -20 cmm-install.log
          echo "----------------------------------------"
        continue-on-error: true

      - name: Nginx Configure
        run: |
          docker exec cmm_rockylinux9 bash -c "cat /root/centminlogs/nginx-configure-*"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: Nginx Patches
        run: |
          docker exec cmm_rockylinux9 bash -c "cat /root/centminlogs/patch_patchnginx-*"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: PHP-FPM Patches
        run: |
          docker exec cmm_rockylinux9 bash -c "cat /root/centminlogs/patch_php-*"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Centmin Mod Disk Usage Analysis
        run: |
          docker exec cmm_rockylinux9 bash -c "du -sh /svr-setup"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "df -hT"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "rpm -qa --queryformat '%10{size} - %-25{name} \t %{version}\n' | sort -n"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: centmin.sh setup
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "echo '1' > /etc/centminmod/email-primary.ini"
          docker exec cmm_rockylinux9 bash -c "echo '2' > /etc/centminmod/email-secondary.ini"
        continue-on-error: true
  
      - name: YUM repolist all
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "yum repolist all" | tee cmm-yumrepolist.log
          output=$(cat cmm-yumrepolist.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true
  
      - name: Inspect wget install
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "/usr/bin/wget -V"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/wget -V" | tee cmm-wget.log
          output=$(cat cmm-wget.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
  
      - name: Inspect ccache install
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/ccache -V" | tee cmm-ccache.log
          output=$(cat cmm-ccache.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY
          sleep 1
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/ccache -s"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "grep ccache ~/.bashrc"
        continue-on-error: true
  
      - name: Inspect PHP-FPM setup
        id: php_test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "systemctl status php-fpm.service --no-pager" && echo "ROCKYLINUX_PHP_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_PHP_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_PHP_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_PHP_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_PHP_TEST_STATUS=$ROCKYLINUX_PHP_TEST_STATUS"| tee cmm-phpstatus.log
          output=$(cat cmm-phpstatus.log)
          echo "RockyLinux PHP Status: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "php -v" | tee cmm-phpver.log
          outputver=$(cat cmm-phpver.log)
          echo "RockyLinux PHP Version: $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "php-config || true" | tee cmm-phpconfig.log && outputphpconfig=$(cat cmm-phpconfig.log) && echo "$outputphpconfig" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ini" | tee cmm-phpini.log && outputphpini=$(cat cmm-phpini.log) && echo "$outputphpini" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Inspect Nginx setup
        id: nginx_test
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ROCKYLINUX_NGINX_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_NGINX_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_NGINX_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_NGINX_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_NGINX_TEST_STATUS=$ROCKYLINUX_NGINX_TEST_STATUS" | tee cmm-nginxstatus.log
          output=$(cat cmm-nginxstatus.log)
          echo "RockyLinux Nginx Status: $output" >> $GITHUB_STEP_SUMMARY
          sleep 1
          docker exec cmm_rockylinux9 bash -c "curl -I http://localhost"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxver.log
          outputver=$(cat cmm-nginxver.log)
          echo "RockyLinux $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginx.log && outputlddnginx=$(cat cmm-lddnginx.log) && echo "$outputlddnginx" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Inspect MariaDB setup
        id: mariadb_test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "systemctl status mariadb.service --no-pager" && echo "ROCKYLINUX_MARIADB_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_MARIADB_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_MARIADB_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_MARIADB_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_MARIADB_TEST_STATUS=$ROCKYLINUX_MARIADB_TEST_STATUS" | tee cmm-mariadbstat.log
          output=$(cat cmm-mariadbstat.log)
          echo "RockyLinux MariaDB Status: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "cat /etc/my.cnf" | tee cmm-mycnf.log && outputmycnf=$(cat cmm-mycnf.log) && echo -e "```\n$outputmycnf\n```" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c 'mysql -t -e "SELECT * FROM mysql.plugin;"' | tee cmm-mariadbplugins1.log && outputmariadbplugins1=$(cat cmm-mariadbplugins1.log) && echo -e "```\n$outputmariadbplugins1\n```" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c 'mysql -t -e "SHOW PLUGINS;"' | tee cmm-mariadbplugins2.log && outputmariadbplugins2=$(cat cmm-mariadbplugins2.log) && echo -e "```\n$outputmariadbplugins2\n```" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "mysqladmin var | tr -s ' '"
          docker exec cmm_rockylinux9 bash -c "mysqladmin ver" | tee cmm-mariadbver.log
          outputver=$(cat cmm-mariadbver.log)
          echo "RockyLinux MariaDB Version: $outputver" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
  
      - name: Inspect Python3 setup
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "python3 --version" | tee cmm-pythonver.log
          output=$(cat cmm-pythonver.log)
          echo "RockyLinux Python Version: $output" >> $GITHUB_STEP_SUMMARY
          sleep 1
          docker exec cmm_rockylinux9 bash -c "pip --version"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "alternatives --list | egrep -i 'pip|python' || echo 'No match for pip or python keywords'"
        continue-on-error: true
  
      - name: Inspect Redis Server setup
        id: redis_test
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "redis-cli info" | tee cmm-redisinfo.log && outputredisinfo=$(cat cmm-redisinfo.log) && echo "$outputredisinfo" >> $GITHUB_STEP_SUMMARY 
          sleep 1
          docker exec cmm_rockylinux9 bash -c "systemctl status redis" && echo "ROCKYLINUX_REDIS_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_REDIS_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_REDIS_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_REDIS_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_REDIS_TEST_STATUS=$ROCKYLINUX_REDIS_TEST_STATUS"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "php --ri redis" | tee cmm-phpredis.log && outputphpredis=$(cat cmm-phpredis.log) && echo "$outputphpredis" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true
  
      - name: Inspect pure-ftpd setup
        id: pureftpd_test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ls -lAh /etc/systemd/system/pure-ftpd.service.d"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "cat /etc/systemd/system/pure-ftpd.service.d/pidfile.conf"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "journalctl -u pure-ftpd --no-pager | tail -n 100"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "systemctl status pure-ftpd.service --no-pager" && echo "ROCKYLINUX_PUREFTPD_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_PUREFTPD_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_PUREFTPD_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_PUREFTPD_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_PUREFTPD_TEST_STATUS=$ROCKYLINUX_PUREFTPD_TEST_STATUS" | tee cmm-pureftpdtest.log
          output=$(cat cmm-pureftpdtest.log)
          echo "RockyLinux Pure-FTPD Status Test: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ls -lAh /etc/ssl/private/pure-ftpd-dhparams.pem || echo '/etc/ssl/private/pure-ftpd-dhparams.pem not yet setup'"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "cat /etc/pure-ftpd/pure-ftpd.conf | egrep 'UnixAuthentication|VerboseLog|PureDB |CreateHomeDir|TLS|PassivePortRange|TLSCipherSuite|MaxClientsNumber|MaxClientsPerIP|NoAnonymous|Umask'"
        continue-on-error: true
  
      - name: Inspect chronyd setup
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "journalctl -u chronyd --no-pager | tail -n 100"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "systemctl status chronyd.service || echo 'chronyd not supported in docker containers'"
        continue-on-error: true
  
      - name: Inspect CSF Firewall setup
        id: csf_test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "egrep '^TCP_IN|^TCP6_IN' /etc/csf/csf.conf"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "grep 'MM_LICENSE_KEY' /etc/csf/csf.conf"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "csf -v" | tee cmm-csfver.log && outputcsfver=$(cat cmm-csfver.log) && echo "$outputcsfver" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "csf -ra"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "cat /etc/csf/csf.allow"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "systemctl status csf.service --no-pager" && echo "ROCKYLINUX_CSF_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_CSF_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_CSF_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_CSF_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_CSF_TEST_STATUS=$ROCKYLINUX_CSF_TEST_STATUS" | tee cmm-csftest.log
          output=$(cat cmm-csftest.log)
          echo "RockyLinux CSF Firewall Status Test: $output" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
  
      - name: Inspect logrotation setup
        run: |
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "logrotate -dv /etc/logrotate.d/nginx"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "logrotate -dv /etc/logrotate.d/php-fpm"
        continue-on-error: true
  
      - name: Inspect Sysstat and systemd-journald service
        run: |
          docker exec cmm_rockylinux9 bash -c "systemctl status sysstat.service --no-pager"
          docker exec cmm_rockylinux9 bash -c "systemctl status systemd-journald.service --no-pager"
        continue-on-error: true
      
      - name: Check permissions of /var/log/journal
        run: |
          docker exec cmm_rockylinux9 bash -c "ls -ld /var/log/journal || echo '/var/log/journal persistent storage not configured'"
        continue-on-error: true
      
      - name: Show recent systemd-journald logs
        run: |
          docker exec cmm_rockylinux9 bash -c "journalctl --unit=systemd-journald.service --no-pager | tail -n 100"
        continue-on-error: true
  
      - name: Run cminfo
        run: |
          docker exec cmm_rockylinux9 bash -c "/usr/local/src/centminmod/tools/cminfo.sh" | tee cmm-cminfo.log && outputcminfo=$(cat cmm-cminfo.log) && echo -e "```\n$outputcminfo\n```" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: Run cminfo top
        run: |
          docker exec cmm_rockylinux9 bash -c "/usr/local/src/centminmod/tools/cminfo.sh top"
        continue-on-error: true
  
      - name: Run addons/golang.sh
        run: |
          docker exec cmm_rockylinux9 bash -c "/usr/local/src/centminmod/addons/golang.sh install"
        continue-on-error: true
  
      - name: Run addons/nodejs.sh
        run: |
          docker exec cmm_rockylinux9 bash -c "/usr/local/src/centminmod/addons/nodejs.sh install"
        continue-on-error: true
  
      - name: Run addons/opendkim.sh
        run: |
          docker exec cmm_rockylinux9 bash -c "/usr/local/src/centminmod/addons/opendkim.sh" | tee cmm-opendkim.log && outputopendkim=$(cat cmm-opendkim.log) && echo -e "```\n$outputopendkim\n```" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true
  
      - name: Run tools/csfcf.sh
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh auto"
          docker exec cmm_rockylinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv4"
          docker exec cmm_rockylinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv6"
        continue-on-error: true
  
      - name: Create Nginx HTTPS vhost
        run: |
          docker exec cmm_rockylinux9 bash -c "/usr/bin/nv -d domain.com -s y" | tee cmm-nginxvhost.log && outputnginxvhost=$(cat cmm-nginxvhost.log) && echo -e "```\n$outputnginxvhost\n```" >> $GITHUB_STEP_SUMMARY 
          # docker exec cmm_rockylinux9 bash -c 'CNIP=$(curl -s -A "Centmin Mod Github workflow" https://geoip.centminmod.com/v4 | jq -r ".ip") && echo "$CNIP domain.com" >> /etc/hosts'
          docker exec cmm_rockylinux9 bash -c 'echo "$(hostname -i) domain.com" >> /etc/hosts'
          docker exec cmm_rockylinux9 bash -c "cat /etc/hosts"
        continue-on-error: true
  
      - name: Test mysqladmin_shell.sh MySQL Database Management
        run: |
          docker exec cmm_rockylinux9 bash -c "echo -e 'dbname dbusername dbpassword\ndb2name db2username db2password' > /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "echo 'multidb'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh multidb /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "echo 'createuserdb'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh createuserdb mydbname mydbuser mydbpass"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "echo 'showgrants'"
          docker exec cmm_rockylinux9 bash -c "echo 'dbusername' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_rockylinux9 bash -c "echo 'db2username' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_rockylinux9 bash -c "echo 'mydbuser' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "echo 'setpass'"
          docker exec cmm_rockylinux9 bash -c "echo -e 'db2username\nnewusername1newpass' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh setpass"
        continue-on-error: true

      - name: Run cmupdate
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
        continue-on-error: true

      - name: centmin.sh menu option 11 submenu 0 yes
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-11-submenu-0-y.sh
        continue-on-error: true

      - name: centmin.sh menu option 11 submenu 0 no
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-11-submenu-0-n.sh
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL default benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/openssltest.sh openssl111 | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL default benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "pip3 install psrecord; cd /home; git clone https://github.com/centminmod/h2load-benchmarks" || true
          docker exec cmm_rockylinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch OpenSSL default upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - OpenSSL default benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'Nginx master branch HTTPS h2load OpenSSL default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx OpenSSL 3.0 upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "touch /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "sed -i '/^OPENSSL_SYSTEM_USE=n$/d' /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'OPENSSL_SYSTEM_USE=n' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'OPENSSL_VERSION=3.0.12' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'OPENSSL_VERSIONFALLBACK=3.0.12' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'OPENSSL_VERSION_OLDOVERRIDE=3.0.12' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL 3.0 benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/openssltest.sh openssl30 | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL 3.0 default benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL 3.0 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch OpenSSL 3.0 default upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - OpenSSL 3.0 default benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'Nginx master branch HTTPS h2load OpenSSL 3.0 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx OpenSSL 3.0 setup
        id: nginxopensslthree_test
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS=$ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "curl -I http://localhost"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxopensslthree.log
          output=$(cat cmm-nginxopensslthree.log)
          echo "RockyLinux Nginx OpenSSL 3.0 Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxopensslthree.log && outputlddnginxopensslthree=$(cat cmm-lddnginxopensslthree.log) && echo "$outputlddnginxopensslthree" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx OpenSSL 1.1.1 upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'OPENSSL_VERSION=1.1.1w' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'OPENSSL_VERSIONFALLBACK=1.1.1w' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'OPENSSL_VERSION_OLDOVERRIDE=1.1.1w' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL 1.1.1 benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/openssltest.sh openssl30 | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL 1.1.1 default benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL 1.1.1 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch OpenSSL 1.1.1 default upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - OpenSSL 1.1.1 default benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'Nginx master branch HTTPS h2load OpenSSL 1.1.1 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx OpenSSL 1.1.1 setup
        id: nginxopensslthreeone_test
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS=$ROCKYLINUX_NGINXOPENSSLTHREE_TEST_STATUS"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "curl -I http://localhost"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxopensslthree.log
          output=$(cat cmm-nginxopensslthree.log)
          echo "RockyLinux Nginx OpenSSL 1.1.1 Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxopensslthree.log && outputlddnginxopensslthree=$(cat cmm-lddnginxopensslthree.log) && echo "$outputlddnginxopensslthree" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx official zlib upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'CLOUDFLARE_ZLIB=n' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: Nginx HTTPS h2load - official zlib benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'Nginx HTTPS h2load official zlib benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx official zlib setup
        id: nginxzlib_test
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ROCKYLINUX_NGINXZLIB_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_NGINXZLIB_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_NGINXZLIB_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_NGINXZLIB_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_NGINXZLIB_TEST_STATUS=$ROCKYLINUX_NGINXZLIB_TEST_STATUS"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "curl -I http://localhost"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxzlib.log
          output=$(cat cmm-nginxzlib.log)
          echo "RockyLinux Nginx official zlib Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxzlib.log && outputlddnginxzlib=$(cat cmm-lddnginxzlib.log) && echo "$outputlddnginxzlib" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx HTTP/3 QuicTLS upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'NGINX_QUIC_SUPPORT=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'CLOUDFLARE_ZLIB=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL QuicTLS benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/openssltest.sh opensslquic | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL QuicTLS benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL QuicTLS benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true

      - name: Inspect Nginx HTTP/3 QuicTLS setup
        id: nginxquic_test
        run: |
          sleep 1
          docker exec cmm_rockylinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ROCKYLINUX_NGINXQUIC_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_NGINXQUIC_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_NGINXQUIC_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_NGINXQUIC_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_NGINXQUIC_TEST_STATUS=$ROCKYLINUX_NGINXQUIC_TEST_STATUS"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "curl -I http://localhost"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxquicver.log
          output=$(cat cmm-nginxquicver.log)
          echo "RockyLinux Nginx HTTP/3 QUIC Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginx.log && outputlddnginx=$(cat cmm-lddnginx.log) && echo "$outputlddnginx" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx BoringSSL Post-Quantum KEX upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'BORINGSSL_SWITCH=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "sed -i 's|NGINX_QUIC_SUPPORT=y|NGINX_QUIC_SUPPORT=n|' /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-4.sh
          docker exec cmm_rockylinux9 bash -c "sed -i 's|listen 443 ssl;|listen 443 ssl default_server;|g' /usr/local/nginx/conf/conf.d/domain.com.ssl.conf"
          docker exec cmm_rockylinux9 bash -c "sed -i '/ssl_prefer_server_ciphers   on;/a \  ssl_ecdh_curve X25519Kyber768Draft00:X25519;' /usr/local/nginx/conf/conf.d/domain.com.ssl.conf"
          docker exec cmm_rockylinux9 bash -c "nginx -t"
          docker exec cmm_rockylinux9 bash -c "systemctl restart nginx"
        continue-on-error: true

      - name: OpenSSL BoringSSL benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/openssltest.sh boringssl | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - BoringSSL benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'Nginx HTTPS h2load BoringSSL benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx BoringSSL Post-Quantum KEX setup
        id: nginxboringssl_test
        run: |
          docker exec cmm_rockylinux9 bash -c "cat /usr/local/nginx/conf/conf.d/domain.com.ssl.conf"
          docker exec cmm_rockylinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ROCKYLINUX_NGINXBORINGSSL_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_NGINXBORINGSSL_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_NGINXBORINGSSL_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_NGINXBORINGSSL_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_NGINXBORINGSSL_TEST_STATUS=$ROCKYLINUX_NGINXBORINGSSL_TEST_STATUS"
          sleep 1
          docker exec cmm_rockylinux9 bash -c "curl -Ik https://domain.com"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "curl -sIkv https://domain.com"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c 'echo | bssl client -server-name domain.com -connect domain.com:443 -curves X25519:X25519Kyber768Draft00 -debug'
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxboringsslver.log
          output=$(cat cmm-nginxboringsslver.log)
          echo "RockyLinux Nginx BoringSSL Post-Quantum KEX Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxboringssl.log && outputlddnginxboringssl=$(cat cmm-lddnginxboringssl.log) && echo "$outputlddnginxboringssl" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch BoringSSL Post-Quantum KEX upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - BoringSSL Post-Quantum KEX benchmarks test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'Nginx master branch HTTPS h2load BoringSSL Post-Quantum KEX benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_rockylinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: OpenSSL benchmark tests summary
        run: |
          docker exec cmm_rockylinux9 bash -c "cat /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load benchmark tests summary
        run: |
          docker exec cmm_rockylinux9 bash -c "cat /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 7.4 upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-5-php7.4.sh
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 7.4 phpbench.php
        run: |
          docker exec cmm_rockylinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.0 upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-5.sh
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.0 phpbench.php
        run: |
          docker exec cmm_rockylinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.1 upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo '#LIBZIP_VER=1.7.3' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "echo 'LIBZIP_VER=1.10.1' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-5-php8.1.sh
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.1 phpbench.php
        run: |
          docker exec cmm_rockylinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true


      - name: MariaDB SSL Setup test
        run: |
          docker exec cmm_rockylinux9 /home/mariadb-ssl-setup.sh ecdsa 127.0.0.1
        continue-on-error: true

      - name: sysbench test
        run: |
          docker exec cmm_rockylinux9 /home/sysbench-run.sh
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.2 upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-5-php8.2.sh
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.2 phpbench.php
        run: |
          docker exec cmm_rockylinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true


      - name: Inspect PHP-FPM 8.2 setup
        id: php82_test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "systemctl status php-fpm.service --no-pager" && echo "ROCKYLINUX_PHP_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_PHP_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_PHP_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_PHP_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_PHP_TEST_STATUS=$ROCKYLINUX_PHP_TEST_STATUS"
          docker exec cmm_rockylinux9 bash -c "php -v" | tee cmm-phpver.log
          outputver=$(cat cmm-phpver.log)
          echo "RockyLinux PHP 8.2 Version: $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "php-config || true" | tee cmm-phpconfig.log && outputphpconfig=$(cat cmm-phpconfig.log) && echo "$outputphpconfig" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ini" | tee cmm-phpini.log && outputphpini=$(cat cmm-phpini.log) && echo "$outputphpini" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.3 upgrade test
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-5-php8.3.sh
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.3 phpbench.php
        run: |
          docker exec cmm_rockylinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true


      - name: Inspect PHP-FPM 8.3 setup
        id: php83_test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "systemctl status php-fpm.service --no-pager" && echo "ROCKYLINUX_PHP_TEST_STATUS=0" >> $GITHUB_ENV && echo "ROCKYLINUX_PHP_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ROCKYLINUX_PHP_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ROCKYLINUX_PHP_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ROCKYLINUX_PHP_TEST_STATUS=$ROCKYLINUX_PHP_TEST_STATUS"
          docker exec cmm_rockylinux9 bash -c "php -v" | tee cmm-phpver.log
          outputver=$(cat cmm-phpver.log)
          echo "RockyLinux PHP 8.3 Version: $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "php-config || true" | tee cmm-phpconfig.log && outputphpconfig=$(cat cmm-phpconfig.log) && echo "$outputphpconfig" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ini" | tee cmm-phpini.log && outputphpini=$(cat cmm-phpini.log) && echo "$outputphpini" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: centmin.sh menu option 5 PHP-FPM + PostgreSQL 16 Install test
        run: |
          docker exec cmm_rockylinux9 bash -c "echo 'POSTGRESQL=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_rockylinux9 bash -c "cmupdate"
          docker exec cmm_rockylinux9 /home/centmin-option-5-php8.1.sh
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphppostgresql.log && outputlddphppostgresql=$(cat cmm-lddphppostgresql.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphppostgresql" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgradepostgresql.log && outputphpverupgradepostgresql=$(cat cmm-phpverupgradepostgresql.log) && echo -e "php -v\n$outputphpverupgradepostgresql" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "chown postgres:postgres /var/lib/pgsql/16/data/" || true
          docker exec cmm_rockylinux9 bash -c "systemctl restart postgresql-16" || true
          docker exec cmm_rockylinux9 bash -c "systemctl status postgresql-16 --no-pager" || true
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri pgsql" || true
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/pgsql-16/bin/pg_config" || true
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "rpm -ql postgresql16-server postgresql16 | grep bin" || true
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "cat /var/lib/pgsql/16/data/log/postgresql-*.log" || true
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqlnd" || true
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri mysqli" || true
          docker exec cmm_rockylinux9 bash -c "echo '---'"
          docker exec cmm_rockylinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzippostgresql.log && outputphpzippostgresql=$(cat cmm-phpzippostgresql.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzippostgresql" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.1 phpbench.php
        run: |
          docker exec cmm_rockylinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true


      - name: Run cmupdate
        run: |
          docker exec cmm_rockylinux9 bash -c "cmupdate"
        continue-on-error: true
  
      - name: YUM History Info
        run: |
          docker exec cmm_rockylinux9 bash -c "for id in \$(/usr/bin/yum history list | awk '{print \$1}' | grep -E '^[0-9]+$'); do /usr/bin/yum history info \$id; done"
        continue-on-error: true

      - name: Generate Rocky Linux package and repo lists
        run: |
          mkdir artifacts
          docker exec cmm_rockylinux9 yum list installed | sort | tr -s ' ' | tee artifacts/rockylinux_packages.txt
          docker exec cmm_rockylinux9 yum list installed | sort | tr -s ' ' | awk '{print $1 " " $2}' | tee artifacts/rockylinux_packages_filtered.txt
          docker exec cmm_rockylinux9 yum repolist all | tee artifacts/rockylinux_repos.txt
          docker exec cmm_rockylinux9 repoquery --queryformat='%{buildtime} %{name}-%{version}-%{release}' --all 2>&1 | sort -k3 | sed '1d' | tee artifacts/rockylinux_repoquery.txt
          docker exec cmm_rockylinux9 rpm -qi --changelog kernel-$(yum list installed | grep kernel | grep -v "kernel-tools" | sort -r | head -n 1 | awk '{print $2}') | head -n40 | tee artifacts/rockylinux_kernel-version.txt

      - name: Upload Rocky Linux package and repo lists
        uses: actions/upload-artifact@v4
        with:
          name: rockylinux_lists
          path: artifacts/*

      - name: Copy Rocky Linux Centmin Mod logs from container
        run: |
          mkdir -p ./centminlogs
          docker cp cmm_rockylinux9:/root/centminlogs ./centminlogs

      - name: Upload Rocky Linux Centmin Mod Logs
        uses: actions/upload-artifact@v4
        with:
          name: rockylinux_logs
          path: centminlogs/*

  oraclelinux:
    runs-on: ubuntu-20.04
    outputs:
      php_test_status: ${{ steps.php_test.outputs.ORACLELINUX_PHP_TEST_STATUS }}
      nginx_test_status: ${{ steps.nginx_test.outputs.ORACLELINUX_NGINX_TEST_STATUS }}
      mariadb_test_status: ${{ steps.mariadb_test.outputs.ORACLELINUX_MARIADB_TEST_STATUS }}
      csf_test_status: ${{ steps.csf_test.outputs.ORACLELINUX_CSF_TEST_STATUS }}
      pureftpd_test_status: ${{ steps.pureftpd_test.outputs.ORACLELINUX_PUREFTPD_TEST_STATUS }}
      redis_test_status: ${{ steps.redis_test.outputs.ORACLELINUX_REDIS_TEST_STATUS }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Sysbox
        run: |
          curl -LO https://downloads.nestybox.com/sysbox/releases/v0.6.2/sysbox-ce_0.6.2-0.linux_amd64.deb
          sudo dpkg -i sysbox-ce_0.6.2-0.linux_amd64.deb || sudo apt-get install -f

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build 
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfiles/Dockerfile-oraclelinux9
          platforms: linux/amd64
          load: true
          tags: cmm_oraclelinux9:latest
  
      - name: Debug payload (repository_dispatch)
        run: echo ${{ github.event.client_payload.release }}
        
      - name: Debug input (workflow_dispatch)
        run: echo ${{ github.event.inputs.release }}
  
      - name: Run container Centmmin Mod LEMP Oracle Linux 9 Install
        run: |
          docker run -d --name=cmm_oraclelinux9 --runtime=sysbox-runc --cap-add=SYS_ADMIN --security-opt seccomp=unconfined --security-opt label=disable --security-opt apparmor=unconfined -v /tmp/$(mktemp -d):/run -v /sys/fs/cgroup:/sys/fs/cgroup:ro cmm_oraclelinux9:latest
          sleep 4
          docker exec cmm_oraclelinux9 bash -c "cat /etc/os-release"
          docker exec cmm_oraclelinux9 bash -c "mkdir -p /etc/centminmod"
          docker exec cmm_oraclelinux9 bash -c "touch /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "sed -i '/^OPENSSL_SYSTEM_USE=n$/d' /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'OPENSSL_SYSTEM_USE=n' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'OPENSSL_VERSION=3.1.6' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'OPENSSL_VERSIONFALLBACK=3.1.6' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'OPENSSL_VERSION_OLDOVERRIDE=3.1.6' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "curl -4sL https://centminmod.com/betainstaller.sh | bash" | tee cmm-install.log
          output=$(tail -20 cmm-install.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true
  
      - name: Centmin Mod Disk Usage Analysis
        run: |
          docker exec cmm_oraclelinux9 bash -c "du -sh /svr-setup"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "df -hT"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "rpm -qa --queryformat '%10{size} - %-25{name} \t %{version}\n' | sort -n"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: centmin.sh setup
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "echo '1' > /etc/centminmod/email-primary.ini"
          docker exec cmm_oraclelinux9 bash -c "echo '2' > /etc/centminmod/email-secondary.ini"
        continue-on-error: true
  
      - name: YUM repolist all
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "yum repolist all" | tee cmm-yumrepolist.log
          output=$(cat cmm-yumrepolist.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true
  
      - name: Inspect wget install
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "/usr/bin/wget -V"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/wget -V" | tee cmm-wget.log
          output=$(cat cmm-wget.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true
  
      - name: Inspect ccache install
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/ccache -V" | tee cmm-ccache.log
          output=$(cat cmm-ccache.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/ccache -s"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "grep ccache ~/.bashrc"
        continue-on-error: true
  
      - name: Inspect PHP-FPM setup
        id: php_test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "systemctl status php-fpm.service --no-pager" && echo "ORACLELINUX_PHP_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_PHP_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_PHP_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_PHP_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_PHP_TEST_STATUS=$ORACLELINUX_PHP_TEST_STATUS" | tee cmm-phpstatus.log
          output=$(cat cmm-phpstatus.log)
          echo "OracleLinux PHP Status: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "php -v" | tee cmm-phpver.log
          outputver=$(cat cmm-phpver.log)
          echo "OracleLinux PHP Version: $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "php-config || true" | tee cmm-phpconfig.log && outputphpconfig=$(cat cmm-phpconfig.log) && echo "$outputphpconfig" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ini" | tee cmm-phpini.log && outputphpini=$(cat cmm-phpini.log) && echo "$outputphpini" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Inspect Nginx setup
        id: nginx_test
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ORACLELINUX_NGINX_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_NGINX_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_NGINX_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_NGINX_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_NGINX_TEST_STATUS=$ORACLELINUX_NGINX_TEST_STATUS" | tee cmm-nginxstatus.log
          output=$(cat cmm-nginxstatus.log)
          echo "OracleLinux Nginx Status: $output" >> $GITHUB_STEP_SUMMARY
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "curl -I http://localhost"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxver.log
          outputver=$(cat cmm-nginxver.log)
          echo "OracleLinux $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginx.log && outputlddnginx=$(cat cmm-lddnginx.log) && echo "$outputlddnginx" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Inspect MariaDB setup
        id: mariadb_test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "systemctl status mariadb.service --no-pager" && echo "ORACLELINUX_MARIADB_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_MARIADB_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_MARIADB_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_MARIADB_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_MARIADB_TEST_STATUS=$ORACLELINUX_MARIADB_TEST_STATUS" | tee cmm-mariadbstat.log
          output=$(cat cmm-mariadbstat.log)
          echo "OracleLinux MariaDB Status: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "cat /etc/my.cnf" | tee cmm-mycnf.log && outputmycnf=$(cat cmm-mycnf.log) && echo -e "```\n$outputmycnf\n```" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c 'mysql -t -e "SELECT * FROM mysql.plugin;"' | tee cmm-mariadbplugins1.log && outputmariadbplugins1=$(cat cmm-mariadbplugins1.log) && echo -e "```\n$outputmariadbplugins1\n```" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c 'mysql -t -e "SHOW PLUGINS;"' | tee cmm-mariadbplugins2.log && outputmariadbplugins2=$(cat cmm-mariadbplugins2.log) && echo -e "```\n$outputmariadbplugins2\n```" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "mysqladmin var | tr -s ' '"
          docker exec cmm_oraclelinux9 bash -c "mysqladmin ver" | tee cmm-mariadbver.log
          outputver=$(cat cmm-mariadbver.log)
          echo "OracleLinux MariaDB Version: $outputver" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
  
      - name: Inspect Python3 setup
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "python3 --version" | tee cmm-pythonver.log
          output=$(cat cmm-pythonver.log)
          echo "OracleLinux Python Version: $output" >> $GITHUB_STEP_SUMMARY
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "pip --version"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "alternatives --list | egrep -i 'pip|python' || echo 'No match for pip or python keywords'"
        continue-on-error: true
  
      - name: Inspect Redis Server setup
        id: redis_test
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "redis-cli info" | tee cmm-redisinfo.log && outputredisinfo=$(cat cmm-redisinfo.log) && echo "$outputredisinfo" >> $GITHUB_STEP_SUMMARY 
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "systemctl status redis" && echo "ORACLELINUX_REDIS_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_REDIS_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_REDIS_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_REDIS_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_REDIS_TEST_STATUS=$ORACLELINUX_REDIS_TEST_STATUS"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "php --ri redis" | tee cmm-phpredis.log && outputphpredis=$(cat cmm-phpredis.log) && echo "$outputphpredis" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true
  
      - name: Inspect pure-ftpd setup
        id: pureftpd_test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ls -lAh /etc/systemd/system/pure-ftpd.service.d"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "cat /etc/systemd/system/pure-ftpd.service.d/pidfile.conf"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "journalctl -u pure-ftpd --no-pager | tail -n 100"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "systemctl status pure-ftpd.service --no-pager" && echo "ORACLELINUX_PUREFTPD_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_PUREFTPD_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_PUREFTPD_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_PUREFTPD_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_PUREFTPD_TEST_STATUS=$ORACLELINUX_PUREFTPD_TEST_STATUS" | tee cmm-pureftpdtest.log
          output=$(cat cmm-pureftpdtest.log)
          echo "OracleLinux Pure-FTPD Status Test: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ls -lAh /etc/ssl/private/pure-ftpd-dhparams.pem || echo '/etc/ssl/private/pure-ftpd-dhparams.pem not yet setup'"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "cat /etc/pure-ftpd/pure-ftpd.conf | egrep 'UnixAuthentication|VerboseLog|PureDB |CreateHomeDir|TLS|PassivePortRange|TLSCipherSuite|MaxClientsNumber|MaxClientsPerIP|NoAnonymous|Umask'"
        continue-on-error: true
  
      - name: Inspect chronyd setup
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "journalctl -u chronyd --no-pager | tail -n 100"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "systemctl status chronyd.service || echo 'chronyd not supported in docker containers'"
        continue-on-error: true
  
      - name: Inspect CSF Firewall setup
        id: csf_test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "egrep '^TCP_IN|^TCP6_IN' /etc/csf/csf.conf"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "grep 'MM_LICENSE_KEY' /etc/csf/csf.conf"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "csf -v" | tee cmm-csfver.log && outputcsfver=$(cat cmm-csfver.log) && echo "$outputcsfver" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "csf -ra"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "cat /etc/csf/csf.allow"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "systemctl status csf.service --no-pager" && echo "ORACLELINUX_CSF_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_CSF_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_CSF_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_CSF_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_CSF_TEST_STATUS=$ORACLELINUX_CSF_TEST_STATUS" | tee cmm-csftest.log
          output=$(cat cmm-csftest.log)
          echo "OracleLinux CSF Firewall Status Test: $output" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
  
      - name: Inspect logrotation setup
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "logrotate -dv /etc/logrotate.d/nginx"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "logrotate -dv /etc/logrotate.d/php-fpm"
        continue-on-error: true
  
      - name: Inspect Sysstat and systemd-journald service
        run: |
          docker exec cmm_oraclelinux9 bash -c "systemctl status sysstat.service --no-pager"
          docker exec cmm_oraclelinux9 bash -c "systemctl status systemd-journald.service --no-pager"
        continue-on-error: true
      
      - name: Check permissions of /var/log/journal
        run: |
          docker exec cmm_oraclelinux9 bash -c "ls -ld /var/log/journal || echo '/var/log/journal persistent storage not configured'"
        continue-on-error: true
      
      - name: Show recent systemd-journald logs
        run: |
          docker exec cmm_oraclelinux9 bash -c "journalctl --unit=systemd-journald.service --no-pager | tail -n 100"
        continue-on-error: true
  
      - name: Run cminfo
        run: |
          docker exec cmm_oraclelinux9 bash -c "/usr/local/src/centminmod/tools/cminfo.sh" | tee cmm-cminfo.log && outputcminfo=$(cat cmm-cminfo.log) && echo -e "```\n$outputcminfo\n```" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: Run cminfo top
        run: |
          docker exec cmm_oraclelinux9 bash -c "/usr/local/src/centminmod/tools/cminfo.sh top"
        continue-on-error: true
  
      - name: Run addons/golang.sh
        run: |
          docker exec cmm_oraclelinux9 bash -c "/usr/local/src/centminmod/addons/golang.sh install"
        continue-on-error: true
  
      - name: Run addons/nodejs.sh
        run: |
          docker exec cmm_oraclelinux9 bash -c "/usr/local/src/centminmod/addons/nodejs.sh install"
        continue-on-error: true
  
      - name: Run addons/opendkim.sh
        run: |
          docker exec cmm_oraclelinux9 bash -c "/usr/local/src/centminmod/addons/opendkim.sh" | tee cmm-opendkim.log && outputopendkim=$(cat cmm-opendkim.log) && echo -e "```\n$outputopendkim\n```" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true
  
      - name: Run tools/csfcf.sh
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh auto"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv4"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv6"
        continue-on-error: true
  
      - name: Create Nginx HTTPS vhost
        run: |
          docker exec cmm_oraclelinux9 bash -c "/usr/bin/nv -d domain.com -s y" | tee cmm-nginxvhost.log && outputnginxvhost=$(cat cmm-nginxvhost.log) && echo -e "```\n$outputnginxvhost\n```" >> $GITHUB_STEP_SUMMARY 
          # docker exec cmm_oraclelinux9 bash -c 'CNIP=$(curl -s -A "Centmin Mod Github workflow" https://geoip.centminmod.com/v4 | jq -r ".ip") && echo "$CNIP domain.com" >> /etc/hosts'
          docker exec cmm_oraclelinux9 bash -c 'echo "$(hostname -i) domain.com" >> /etc/hosts'
          docker exec cmm_oraclelinux9 bash -c "cat /etc/hosts"
        continue-on-error: true
  
      - name: Test mysqladmin_shell.sh MySQL Database Management
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo -e 'dbname dbusername dbpassword\ndb2name db2username db2password' > /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "echo 'multidb'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh multidb /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "echo 'createuserdb'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh createuserdb mydbname mydbuser mydbpass"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "echo 'showgrants'"
          docker exec cmm_oraclelinux9 bash -c "echo 'dbusername' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_oraclelinux9 bash -c "echo 'db2username' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_oraclelinux9 bash -c "echo 'mydbuser' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "echo 'setpass'"
          docker exec cmm_oraclelinux9 bash -c "echo -e 'db2username\nnewusername1newpass' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh setpass"
        continue-on-error: true
  
      - name: Run cmupdate
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
        continue-on-error: true

      - name: centmin.sh menu option 11 submenu 0 yes
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-11-submenu-0-y.sh
        continue-on-error: true

      - name: centmin.sh menu option 11 submenu 0 no
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-11-submenu-0-n.sh
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL default benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/openssltest.sh openssl111 | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL default benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "pip3 install psrecord; cd /home; git clone https://github.com/centminmod/h2load-benchmarks" || true
          docker exec cmm_oraclelinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch OpenSSL default upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - OpenSSL default benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'Nginx master branch HTTPS h2load OpenSSL default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx OpenSSL 3.0 upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "touch /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "sed -i '/^OPENSSL_SYSTEM_USE=n$/d' /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'OPENSSL_SYSTEM_USE=n' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'OPENSSL_VERSION=3.0.12' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'OPENSSL_VERSIONFALLBACK=3.0.12' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'OPENSSL_VERSION_OLDOVERRIDE=3.0.12' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL 3.0 benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/openssltest.sh openssl30 | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL 3.0 default benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL 3.0 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch OpenSSL 3.0 default upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - OpenSSL 3.0 default benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'Nginx master branch HTTPS h2load OpenSSL 3.0 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx OpenSSL 3.0 setup
        id: nginxopensslthree_test
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS=$ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "curl -I http://localhost"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxopensslthree.log
          output=$(cat cmm-nginxopensslthree.log)
          echo "OracleLinux Nginx OpenSSL 3.0 Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxopensslthree.log && outputlddnginxopensslthree=$(cat cmm-lddnginxopensslthree.log) && echo "$outputlddnginxopensslthree" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx OpenSSL 1.1.1 upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'OPENSSL_VERSION=1.1.1w' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'OPENSSL_VERSIONFALLBACK=1.1.1w' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'OPENSSL_VERSION_OLDOVERRIDE=1.1.1w' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL 1.1.1 benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/openssltest.sh openssl30 | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL 1.1.1 default benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL 1.1.1 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch OpenSSL 1.1.1 default upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - OpenSSL 1.1.1 default benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'Nginx master branch HTTPS h2load OpenSSL 1.1.1 default benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx OpenSSL 1.1.1 setup
        id: nginxopensslthreeone_test
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS=$ORACLELINUX_NGINXOPENSSLTHREE_TEST_STATUS"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "curl -I http://localhost"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxopensslthree.log
          output=$(cat cmm-nginxopensslthree.log)
          echo "OracleLinux Nginx OpenSSL 1.1.1 Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxopensslthree.log && outputlddnginxopensslthree=$(cat cmm-lddnginxopensslthree.log) && echo "$outputlddnginxopensslthree" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx official zlib upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'CLOUDFLARE_ZLIB=n' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: Nginx HTTPS h2load - official zlib benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'Nginx HTTPS h2load official zlib benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true

      - name: Inspect Nginx official zlib setup
        id: nginxzlib_test
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ORACLELINUX_NGINXZLIB_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_NGINXZLIB_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_NGINXZLIB_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_NGINXZLIB_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_NGINXZLIB_TEST_STATUS=$ORACLELINUX_NGINXZLIB_TEST_STATUS"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "curl -I http://localhost"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxzlib.log
          output=$(cat cmm-nginxzlib.log)
          echo "OracleLinux Nginx official zlib Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxzlib.log && outputlddnginxzlib=$(cat cmm-lddnginxzlib.log) && echo "$outputlddnginxzlib" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx HTTP/3 QuicTLS upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'NGINX_QUIC_SUPPORT=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'CLOUDFLARE_ZLIB=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-4.sh
        continue-on-error: true

      - name: OpenSSL QuicTLS benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/openssltest.sh opensslquic | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - OpenSSL QuicTLS benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'Nginx HTTPS h2load OpenSSL QuicTLS benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true

      - name: Inspect Nginx HTTP/3 QuicTLS setup
        id: nginxquic_test
        run: |
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ORACLELINUX_NGINXQUIC_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_NGINXQUIC_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_NGINXQUIC_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_NGINXQUIC_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_NGINXQUIC_TEST_STATUS=$ORACLELINUX_NGINXQUIC_TEST_STATUS"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "curl -I http://localhost"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "curl -sIv http://localhost"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxquicver.log
          output=$(cat cmm-nginxquicver.log)
          echo "OracleLinux Nginx HTTP/3 QUIC Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginx.log && outputlddnginx=$(cat cmm-lddnginx.log) && echo "$outputlddnginx" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx BoringSSL Post-Quantum KEX upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'BORINGSSL_SWITCH=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "sed -i 's|NGINX_QUIC_SUPPORT=y|NGINX_QUIC_SUPPORT=n|' /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-4.sh
          docker exec cmm_oraclelinux9 bash -c "sed -i 's|listen 443 ssl;|listen 443 ssl default_server;|g' /usr/local/nginx/conf/conf.d/domain.com.ssl.conf"
          docker exec cmm_oraclelinux9 bash -c "sed -i '/ssl_prefer_server_ciphers   on;/a \  ssl_ecdh_curve X25519Kyber768Draft00:X25519;' /usr/local/nginx/conf/conf.d/domain.com.ssl.conf"
          docker exec cmm_oraclelinux9 bash -c "nginx -t"
          docker exec cmm_oraclelinux9 bash -c "systemctl restart nginx"
        continue-on-error: true

      - name: OpenSSL BoringSSL benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxopenssl-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/openssltest.sh boringssl | tee -a /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load - BoringSSL benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'Nginx HTTPS h2load BoringSSL benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: Inspect Nginx BoringSSL Post-Quantum KEX setup
        id: nginxboringssl_test
        run: |
          docker exec cmm_oraclelinux9 bash -c "cat /usr/local/nginx/conf/conf.d/domain.com.ssl.conf"
          docker exec cmm_oraclelinux9 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "systemctl status nginx.service --no-pager" && echo "ORACLELINUX_NGINXBORINGSSL_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_NGINXBORINGSSL_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_NGINXBORINGSSL_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_NGINXBORINGSSL_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_NGINXBORINGSSL_TEST_STATUS=$ORACLELINUX_NGINXBORINGSSL_TEST_STATUS"
          sleep 1
          docker exec cmm_oraclelinux9 bash -c "curl -Ik https://domain.com"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "curl -sIkv https://domain.com"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c 'echo | bssl client -server-name domain.com -connect domain.com:443 -curves X25519:X25519Kyber768Draft00 -debug'
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1" | tee cmm-nginxboringsslver.log
          output=$(cat cmm-nginxboringsslver.log)
          echo "OracleLinux Nginx BoringSSL Post-Quantum KEX Version: $output" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/sbin/nginx" | tee cmm-lddnginxboringssl.log && outputlddnginxboringssl=$(cat cmm-lddnginxboringssl.log) && echo "$outputlddnginxboringssl" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx master branch BoringSSL Post-Quantum KEX upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-4-master.sh
        continue-on-error: true

      - name: Nginx master branch HTTPS h2load - BoringSSL Post-Quantum KEX benchmarks test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'Nginx master branch HTTPS h2load BoringSSL Post-Quantum KEX benchmarks test' | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/usr/local/sbin/nginx -V 2>&1 | head -n3 | tee -a /home/nginxh2loadbench-summary.log" || true
          docker exec cmm_oraclelinux9 bash -c "/home/h2load-benchmarks/h2load-bench.sh -t1 -c100 -n5000 -u https://domain.com | grep -oP '{.*}' | jq -r | tee -a /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: OpenSSL benchmark tests summary
        run: |
          docker exec cmm_oraclelinux9 bash -c "cat /home/nginxopenssl-summary.log" || true
        continue-on-error: true

      - name: Nginx HTTPS h2load benchmark tests summary
        run: |
          docker exec cmm_oraclelinux9 bash -c "cat /home/nginxh2loadbench-summary.log" || true
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 7.4 upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-5-php7.4.sh
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 7.4 phpbench.php
        run: |
          docker exec cmm_oraclelinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.0 upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-5.sh
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.0 phpbench.php
        run: |
          docker exec cmm_oraclelinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.1 upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo '#LIBZIP_VER=1.7.3' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "echo 'LIBZIP_VER=1.10.1' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-5-php8.1.sh
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.1 phpbench.php
        run: |
          docker exec cmm_oraclelinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true


      - name: MariaDB SSL Setup test
        run: |
          docker exec cmm_oraclelinux9 /home/mariadb-ssl-setup.sh ecdsa 127.0.0.1
        continue-on-error: true

      - name: sysbench test
        run: |
          docker exec cmm_oraclelinux9 /home/sysbench-run.sh
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.2 upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-5-php8.2.sh
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.2 phpbench.php
        run: |
          docker exec cmm_oraclelinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true


      - name: Inspect PHP-FPM 8.2 setup
        id: php82_test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "systemctl status php-fpm.service --no-pager" && echo "ORACLELINUX_PHP_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_PHP_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_PHP_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_PHP_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_PHP_TEST_STATUS=$ORACLELINUX_PHP_TEST_STATUS"
          docker exec cmm_oraclelinux9 bash -c "php -v" | tee cmm-phpver.log
          outputver=$(cat cmm-phpver.log)
          echo "OracleLinux PHP 8.2 Version: $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "php-config || true" | tee cmm-phpconfig.log && outputphpconfig=$(cat cmm-phpconfig.log) && echo "$outputphpconfig" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ini" | tee cmm-phpini.log && outputphpini=$(cat cmm-phpini.log) && echo "$outputphpini" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
        continue-on-error: true

      - name: centmin.sh menu option 5 PHP-FPM 8.3 upgrade test
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-5-php8.3.sh
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzip.log && outputphpzip=$(cat cmm-phpzip.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzip" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.3 phpbench.php
        run: |
          docker exec cmm_oraclelinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true


      - name: Inspect PHP-FPM 8.3 setup
        id: php83_test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "systemctl status php-fpm.service --no-pager" && echo "ORACLELINUX_PHP_TEST_STATUS=0" >> $GITHUB_ENV && echo "ORACLELINUX_PHP_TEST_STATUS=0" >> $GITHUB_OUTPUT || echo "ORACLELINUX_PHP_TEST_STATUS=$?" >> $GITHUB_ENV; echo "ORACLELINUX_PHP_TEST_STATUS=$?" >> $GITHUB_OUTPUT
          echo "ORACLELINUX_PHP_TEST_STATUS=$ORACLELINUX_PHP_TEST_STATUS"
          docker exec cmm_oraclelinux9 bash -c "php -v" | tee cmm-phpver.log
          outputver=$(cat cmm-phpver.log)
          echo "OracleLinux PHP 8.3 Version: $outputver" >> $GITHUB_STEP_SUMMARY
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "php-config || true" | tee cmm-phpconfig.log && outputphpconfig=$(cat cmm-phpconfig.log) && echo "$outputphpconfig" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ini" | tee cmm-phpini.log && outputphpini=$(cat cmm-phpini.log) && echo "$outputphpini" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphp.log && outputlddphp=$(cat cmm-lddphp.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphp" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgrade.log && outputphpverupgrade=$(cat cmm-phpverupgrade.log) && echo -e "php -v\n$outputphpverupgrade" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqlnd"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqli"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
        continue-on-error: true
  
      - name: centmin.sh menu option 5 PHP-FPM + PostgreSQL 16 Install test
        run: |
          docker exec cmm_oraclelinux9 bash -c "echo 'POSTGRESQL=y' >> /etc/centminmod/custom_config.inc"
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
          docker exec cmm_oraclelinux9 /home/centmin-option-5-php8.1.sh
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "ldd /usr/local/bin/php" | tee cmm-lddphppostgresql.log && outputlddphppostgresql=$(cat cmm-lddphppostgresql.log) && echo -e "ldd /usr/local/bin/php\n$outputlddphppostgresql" >> $GITHUB_STEP_SUMMARY_DISABLED || true 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php -v" | tee cmm-phpverupgradepostgresql.log && outputphpverupgradepostgresql=$(cat cmm-phpverupgradepostgresql.log) && echo -e "php -v\n$outputphpverupgradepostgresql" >> $GITHUB_STEP_SUMMARY 
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "chown postgres:postgres /var/lib/pgsql/16/data/" || true
          docker exec cmm_oraclelinux9 bash -c "systemctl restart postgresql-16" || true
          docker exec cmm_oraclelinux9 bash -c "systemctl status postgresql-16 --no-pager" || true
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri pgsql" || true
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/pgsql-16/bin/pg_config" || true
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "rpm -ql postgresql16-server postgresql16 | grep bin" || true
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "cat /var/lib/pgsql/16/data/log/postgresql-*.log" || true
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri openssl"
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqlnd" || true
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri mysqli" || true
          docker exec cmm_oraclelinux9 bash -c "echo '---'"
          docker exec cmm_oraclelinux9 bash -c "/usr/local/bin/php --ri zip" | tee cmm-phpzippostgresql.log && outputphpzippostgresql=$(cat cmm-phpzippostgresql.log) && echo -e "/usr/local/bin/php --ri zip\n$outputphpzippostgresql" >> $GITHUB_STEP_SUMMARY 
        continue-on-error: true

      - name: PHP-FPM 8.1 phpbench.php
        run: |
          docker exec cmm_oraclelinux9 bash -c "/home/phpbench.sh" || true
        continue-on-error: true


      - name: Run cmupdate
        run: |
          docker exec cmm_oraclelinux9 bash -c "cmupdate"
        continue-on-error: true
  
      - name: YUM History Info
        run: |
          docker exec cmm_oraclelinux9 bash -c "for id in \$(/usr/bin/yum history list | awk '{print \$1}' | grep -E '^[0-9]+$'); do /usr/bin/yum history info \$id; done"
        continue-on-error: true

      - name: Generate Oracle Linux package and repo lists
        run: |
          mkdir artifacts
          docker exec cmm_oraclelinux9 yum list installed | sort | tr -s ' ' | tee artifacts/oraclelinux_packages.txt
          docker exec cmm_oraclelinux9 yum list installed | sort | tr -s ' ' | awk '{print $1 " " $2}' | tee artifacts/oraclelinux_packages_filtered.txt
          docker exec cmm_oraclelinux9 yum repolist all | tee artifacts/oraclelinux_repos.txt
          docker exec cmm_oraclelinux9 repoquery --queryformat='%{buildtime} %{name}-%{version}-%{release}' --all 2>&1 | sort -k3 | sed '1d' | tee artifacts/oraclelinux_repoquery.txt
          docker exec cmm_oraclelinux9 rpm -qi --changelog kernel-$(yum list installed | grep kernel | grep -v "kernel-tools" | sort -r | head -n 1 | awk '{print $2}') | head -n40 | tee artifacts/oraclelinux_kernel-version.txt

      - name: Upload Oracle Linux package and repo lists
        uses: actions/upload-artifact@v4
        with:
          name: oraclelinux_lists
          path: artifacts/*

      - name: Copy Oracle Linux Centmin Mod logs from container
        run: |
          mkdir -p ./centminlogs
          docker cp cmm_oraclelinux9:/root/centminlogs ./centminlogs

      - name: Upload Oracle Linux Centmin Mod Logs
        uses: actions/upload-artifact@v4
        with:
          name: oraclelinux_logs
          path: centminlogs/*

  compare:
    needs: [almalinux, rockylinux, oraclelinux]
    runs-on: ubuntu-20.04
    steps:
      - name: Download almalinux package and repo lists
        uses: actions/download-artifact@v4
        with:
          name: almalinux_lists
          path: almalinux
  
      - name: Download rockylinux package and repo lists
        uses: actions/download-artifact@v4
        with:
          name: rockylinux_lists
          path: rockylinux

      - name: Download oraclelinux package and repo lists
        uses: actions/download-artifact@v4
        with:
          name: oraclelinux_lists
          path: oraclelinux

      - name: Download AlmaLinux Centmin Mod log
        uses: actions/download-artifact@v4
        with:
          name: almalinux_logs
          path: almalinux_logs

      - name: Download Rocky Linux Centmin Mod log
        uses: actions/download-artifact@v4
        with:
          name: rockylinux_logs
          path: rockylinux_logs

      - name: Download Oracle Linux Centmin Mod log
        uses: actions/download-artifact@v4
        with:
          name: oraclelinux_logs
          path: oraclelinux_logs

      - name: Compare AlmaLinux 9 vs Rocky Linux 9 vs Oracle Linux 9 installed packages and repos
        run: |
          set -x
          echo "Creating artifacts directory"
          mkdir -p artifacts
          echo "Installing diffutils"
          sudo apt-get update && sudo apt-get install -y diffutils || true
          echo "List artifacts"
          echo "ls -lAh almalinux"
          ls -lAh almalinux
          echo "ls -lAh rockylinux"
          ls -lAh rockylinux
          echo "ls -lAh oraclelinux"
          ls -lAh oraclelinux
          echo "ls -lAh almalinux_logs"
          ls -lAh almalinux_logs
          echo "ls -lAh rockylinux_logs"
          ls -lAh rockylinux_logs
          echo "ls -lAh oraclelinux_logs"
          ls -lAh oraclelinux_logs
          echo "Running diff on package lists - AlmaLinux 9 vs Rocky Linux 9"
          diff almalinux/almalinux_packages.txt rockylinux/rockylinux_packages.txt | tee artifacts/packages_diff_almalinux9-vs-rockylinux9.txt || true
          echo "Running diff on filtered package lists - AlmaLinux 9 vs Rocky Linux 9"
          diff almalinux/almalinux_packages_filtered.txt rockylinux/rockylinux_packages_filtered.txt | tee artifacts/packages_diff_filtered_almalinux9-vs-rockylinux9.txt || true
          echo "Running sdiff on package lists - AlmaLinux 9 vs Rocky Linux 9"
          sdiff -s -w 220 almalinux/almalinux_packages.txt rockylinux/rockylinux_packages.txt | tee artifacts/packages_sdiff_almalinux9-vs-rockylinux9.txt || true
          echo "Running sdiff on filtered package lists - AlmaLinux 9 vs Rocky Linux 9"
          sdiff -s -w 220 almalinux/almalinux_packages_filtered.txt rockylinux/rockylinux_packages_filtered.txt | tee artifacts/packages_sdiff_filtered_almalinux9-vs-rockylinux9.txt || true
          echo "Running diff on repo lists - AlmaLinux 9 vs Rocky Linux 9"
          diff almalinux/almalinux_repos.txt rockylinux/rockylinux_repos.txt | tee artifacts/repos_diff_almalinux9-vs-rockylinux9.txt || true
          echo "Running sdiff on repo lists - AlmaLinux 9 vs Rocky Linux 9"
          sdiff -s -w 220 almalinux/almalinux_repos.txt rockylinux/rockylinux_repos.txt | tee artifacts/repos_sdiff_almalinux9-vs-rockylinux9.txt || true
          echo "Running diff on package lists - Almalinux 9 vs Oracle Linux 9"
          diff almalinux/almalinux_packages.txt oraclelinux/oraclelinux_packages.txt | tee artifacts/packages_diff_almalinux9-vs-oraclelinux9.txt || true
          echo "Running diff on filtered package lists - Almalinux 9 vs Oracle Linux 9"
          diff almalinux/almalinux_packages_filtered.txt oraclelinux/oraclelinux_packages_filtered.txt | tee artifacts/packages_diff_filtered_almalinux9-vs-oraclelinux9.txt || true
          echo "Running sdiff on package lists - Almalinux 9 vs Oracle Linux 9"
          sdiff -s -w 220 almalinux/almalinux_packages.txt oraclelinux/oraclelinux_packages.txt | tee artifacts/packages_sdiff_almalinux9-vs-oraclelinux9.txt || true
          echo "Running sdiff on filtered package lists - Almalinux 9 vs Oracle Linux 9"
          sdiff -s -w 220 almalinux/almalinux_packages_filtered.txt oraclelinux/oraclelinux_packages_filtered.txt | tee artifacts/packages_sdiff_filtered_almalinux9-vs-oraclelinux9.txt || true
          echo "Running diff on repo lists - Almalinux 9 vs Oracle Linux 9"
          diff almalinux/almalinux_repos.txt oraclelinux/oraclelinux_repos.txt | tee artifacts/repos_diff_almalinux9-vs-oraclelinux9.txt || true
          echo "Running sdiff on repo lists - Almalinux 9 vs Oracle Linux 9"
          sdiff -s -w 220 almalinux/almalinux_repos.txt oraclelinux/oraclelinux_repos.txt | tee artifacts/repos_sdiff_almalinux9-vs-oraclelinux9.txt || true
          echo "Running diff on repoquery lists - AlmaLinux 9 vs Rocky Linux 9"
          diff almalinux/almalinux_repoquery.txt rockylinux/rockylinux_repoquery.txt | tee artifacts/repoquery_diff_almalinux9-vs-rockylinux9.txt || true
          echo "Running sdiff on repoquery lists - AlmaLinux 9 vs Rocky Linux 9"
          sdiff -s -w 220 almalinux/almalinux_repoquery.txt rockylinux/rockylinux_repoquery.txt | tee artifacts/repoquery_sdiff_almalinux9-vs-rockylinux9.txt || true
          echo "Running diff on repoquery lists - Almalinux 9 vs Oracle Linux 9"
          diff almalinux/almalinux_repoquery.txt oraclelinux/oraclelinux_repoquery.txt | tee artifacts/repoquery_diff_almalinux9-vs-oraclelinux9.txt || true
          echo "Running sdiff on repoquery lists - Almalinux 9 vs Oracle Linux 9"
          sdiff -s -w 220 almalinux/almalinux_repoquery.txt oraclelinux/oraclelinux_repoquery.txt | tee artifacts/repoquery_sdiff_almalinux9-vs-oraclelinux9.txt || true
          echo "Running diff latest kernel version - AlmaLinux 9 vs Rocky Linux 9"
          diff almalinux/almalinux_kernel-version.txt rockylinux/rockylinux_kernel-version.txt | tee artifacts/kernel-version_diff_almalinux9-vs-rockylinux9.txt || true
          echo "Running diff latest kernel version - AlmaLinux 9 vs Oracle Linux 9"
          diff almalinux/almalinux_kernel-version.txt oraclelinux/oraclelinux_kernel-version.txt | tee artifacts/kernel-version_diff_almalinux9-vs-oraclelinux9.txt || true

      - name: Upload comparison artifacts
        uses: actions/upload-artifact@v4
        with:
          name: comparison_results
          path: artifacts/

      - name: Upload AlmaLinux Centmin Mod log artifacts
        uses: actions/upload-artifact@v4
        with:
          name: almalinux_cmm_logs
          path: almalinux_logs/

      - name: Upload Rocky Linux Centmin Mod log artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rockylinux_cmm_logs
          path: rockylinux_logs/

      - name: Upload Oracle Linux Centmin Mod log artifacts
        uses: actions/upload-artifact@v4
        with:
          name: oraclelinux_cmm_logs
          path: oraclelinux_logs/

  discordNotificationSuccess:
    needs: [almalinux, rockylinux, compare]
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
    - name: Notify Discord Success
      run: |
        almalinux_php_test_emoji=$(if [ "${{ needs.almalinux.outputs.php_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_php_test_emoji=$(if [ "${{ needs.rockylinux.outputs.php_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_php_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.php_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        almalinux_nginx_test_emoji=$(if [ "${{ needs.almalinux.outputs.nginx_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_nginx_test_emoji=$(if [ "${{ needs.rockylinux.outputs.nginx_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_nginx_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.nginx_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        almalinux_mariadb_test_emoji=$(if [ "${{ needs.almalinux.outputs.mariadb_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_mariadb_test_emoji=$(if [ "${{ needs.rockylinux.outputs.mariadb_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_mariadb_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.mariadb_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        almalinux_csf_test_emoji=$(if [ "${{ needs.almalinux.outputs.csf_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_csf_test_emoji=$(if [ "${{ needs.rockylinux.outputs.csf_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_csf_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.csf_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        almalinux_pureftpd_test_emoji=$(if [ "${{ needs.almalinux.outputs.pureftpd_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_pureftpd_test_emoji=$(if [ "${{ needs.rockylinux.outputs.pureftpd_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_pureftpd_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.pureftpd_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        almalinux_redis_test_emoji=$(if [ "${{ needs.almalinux.outputs.redis_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_redis_test_emoji=$(if [ "${{ needs.rockylinux.outputs.redis_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_redis_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.redis_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{\"content\":\"Workflow '${{ github.workflow }}' was triggered by '${{ github.event_name }}' and completed successfully! \u2705\\nAlmaLinux PHP-FPM test returned: ${{ needs.almalinux.outputs.php_test_status }} $almalinux_php_test_emoji\\nRocky Linux PHP-FPM test returned: ${{ needs.rockylinux.outputs.php_test_status }} $rockylinux_php_test_emoji\\nOracle Linux PHP-FPM test returned: ${{ needs.oraclelinux.outputs.php_test_status }} $oraclelinux_php_test_emoji\\nAlmaLinux Nginx test returned: ${{ needs.almalinux.outputs.nginx_test_status }} $almalinux_nginx_test_emoji\\nRocky Linux Nginx test returned: ${{ needs.rockylinux.outputs.nginx_test_status }} $rockylinux_nginx_test_emoji\\nOracle Linux Nginx test returned: ${{ needs.oraclelinux.outputs.nginx_test_status }} $oraclelinux_nginx_test_emoji\\nAlmaLinux MariaDB test returned: ${{ needs.almalinux.outputs.mariadb_test_status }} $almalinux_mariadb_test_emoji\\nRocky Linux MariaDB test returned: ${{ needs.rockylinux.outputs.mariadb_test_status }} $rockylinux_mariadb_test_emoji\\nOracle Linux MariaDB test returned: ${{ needs.oraclelinux.outputs.mariadb_test_status }} $oraclelinux_mariadb_test_emoji\\nAlmaLinux CSF test returned: ${{ needs.almalinux.outputs.csf_test_status }} $almalinux_csf_test_emoji\\nRocky Linux CSF test returned: ${{ needs.rockylinux.outputs.csf_test_status }} $rockylinux_csf_test_emoji\\nOracle Linux CSF test returned: ${{ needs.oraclelinux.outputs.csf_test_status }} $oraclelinux_csf_test_emoji\\nAlmaLinux PUREFTPD test returned: ${{ needs.almalinux.outputs.pureftpd_test_status }} $almalinux_pureftpd_test_emoji\\nRocky Linux PUREFTPD test returned: ${{ needs.rockylinux.outputs.pureftpd_test_status }} $rockylinux_pureftpd_test_emoji\\nOracle Linux PUREFTPD test returned: ${{ needs.oraclelinux.outputs.pureftpd_test_status }} $oraclelinux_pureftpd_test_emoji\\nAlmaLinux REDIS test returned: ${{ needs.almalinux.outputs.redis_test_status }} $almalinux_redis_test_emoji\\nRocky Linux REDIS test returned: ${{ needs.rockylinux.outputs.redis_test_status }} $rockylinux_redis_test_emoji\\nOracle Linux REDIS test returned: ${{ needs.oraclelinux.outputs.redis_test_status }} $oraclelinux_redis_test_emoji\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}

  discordNotificationFailure:
    needs: [almalinux, rockylinux, compare]
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
    - name: Notify Discord Failure
      run: |
        almalinux_php_test_emoji=$(if [ "${{ needs.almalinux.outputs.php_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_php_test_emoji=$(if [ "${{ needs.rockylinux.outputs.php_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_php_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.php_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        almalinux_nginx_test_emoji=$(if [ "${{ needs.almalinux.outputs.nginx_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_nginx_test_emoji=$(if [ "${{ needs.rockylinux.outputs.nginx_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_nginx_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.nginx_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        almalinux_mariadb_test_emoji=$(if [ "${{ needs.almalinux.outputs.mariadb_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_mariadb_test_emoji=$(if [ "${{ needs.rockylinux.outputs.mariadb_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_mariadb_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.mariadb_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        almalinux_csf_test_emoji=$(if [ "${{ needs.almalinux.outputs.csf_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_csf_test_emoji=$(if [ "${{ needs.rockylinux.outputs.csf_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_csf_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.csf_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        almalinux_pureftpd_test_emoji=$(if [ "${{ needs.almalinux.outputs.pureftpd_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_pureftpd_test_emoji=$(if [ "${{ needs.rockylinux.outputs.pureftpd_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_pureftpd_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.pureftpd_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        almalinux_redis_test_emoji=$(if [ "${{ needs.almalinux.outputs.redis_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        rockylinux_redis_test_emoji=$(if [ "${{ needs.rockylinux.outputs.redis_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        oraclelinux_redis_test_emoji=$(if [ "${{ needs.oraclelinux.outputs.redis_test_status }}" = "0" ]; then echo -e "\u2705"; else echo -e "\u274C"; fi)
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{\"content\":\"Workflow '${{ github.workflow }}' was triggered by '${{ github.event_name }}' and failed!\u274C\\nAlmaLinux PHP-FPM test returned: ${{ needs.almalinux.outputs.php_test_status }} $almalinux_php_test_emoji\\nRocky Linux PHP-FPM test returned: ${{ needs.rockylinux.outputs.php_test_status }} $rockylinux_php_test_emoji\\nOracle Linux PHP-FPM test returned: ${{ needs.oraclelinux.outputs.php_test_status }} $oraclelinux_php_test_emoji\\nAlmaLinux Nginx test returned: ${{ needs.almalinux.outputs.nginx_test_status }} $almalinux_nginx_test_emoji\\nRocky Linux Nginx test returned: ${{ needs.rockylinux.outputs.nginx_test_status }} $rockylinux_nginx_test_emoji\\nOracle Linux Nginx test returned: ${{ needs.oraclelinux.outputs.nginx_test_status }} $oraclelinux_nginx_test_emoji\\nAlmaLinux MariaDB test returned: ${{ needs.almalinux.outputs.mariadb_test_status }} $almalinux_mariadb_test_emoji\\nRocky Linux MariaDB test returned: ${{ needs.rockylinux.outputs.mariadb_test_status }} $rockylinux_mariadb_test_emoji\\nOracle Linux MariaDB test returned: ${{ needs.oraclelinux.outputs.mariadb_test_status }} $oraclelinux_mariadb_test_emoji\\nAlmaLinux CSF test returned: ${{ needs.almalinux.outputs.csf_test_status }} $almalinux_csf_test_emoji\\nRocky Linux CSF test returned: ${{ needs.rockylinux.outputs.csf_test_status }} $rockylinux_csf_test_emoji\\nOracle Linux CSF test returned: ${{ needs.oraclelinux.outputs.csf_test_status }} $oraclelinux_csf_test_emoji\\nAlmaLinux PUREFTPD test returned: ${{ needs.almalinux.outputs.pureftpd_test_status }} $almalinux_pureftpd_test_emoji\\nRocky Linux PUREFTPD test returned: ${{ needs.rockylinux.outputs.pureftpd_test_status }} $rockylinux_pureftpd_test_emoji\\nOracle Linux PUREFTPD test returned: ${{ needs.oraclelinux.outputs.pureftpd_test_status }} $oraclelinux_pureftpd_test_emoji\\nAlmaLinux REDIS test returned: ${{ needs.almalinux.outputs.redis_test_status }} $almalinux_redis_test_emoji\\nRocky Linux REDIS test returned: ${{ needs.rockylinux.outputs.redis_test_status }} $rockylinux_redis_test_emoji\\nOracle Linux REDIS test returned: ${{ needs.oraclelinux.outputs.redis_test_status }} $oraclelinux_redis_test_emoji\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}