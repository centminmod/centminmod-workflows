name: AlmaLinux 8 vs Rocky Linux 8

on:
  workflow_dispatch:
  repository_dispatch:
    types: [run-almalinux-vs-rockylinux-8-workflow]

jobs:
  almalinux:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Sysbox
        run: |
          curl -LO https://downloads.nestybox.com/sysbox/releases/v0.6.7/sysbox-ce_0.6.7-0.linux_amd64.deb
          sudo dpkg -i sysbox-ce_0.6.7-0.linux_amd64.deb || sudo apt-get install -f

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build 
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfiles/Dockerfile-almalinux8
          platforms: linux/amd64
          load: true
          tags: cmm_almalinux8:latest

      - name: Debug payload (repository_dispatch)
        run: echo ${{ github.event.client_payload.release }}
        
      - name: Debug input (workflow_dispatch)
        run: echo ${{ github.event.inputs.release }}
  
      - name: Run container Centmmin Mod LEMP AlmaLinux 8 Install
        run: |
          docker run -d --name=cmm_almalinux8 --runtime=sysbox-runc --cap-add=SYS_ADMIN --security-opt seccomp=unconfined --security-opt label=disable --security-opt apparmor=unconfined -v /tmp/$(mktemp -d):/run -v /sys/fs/cgroup:/sys/fs/cgroup:ro cmm_almalinux8:latest
          sleep 4
          docker exec cmm_almalinux8 bash -c "curl -4sL https://centminmod.com/betainstaller.sh | bash" | tee cmm-install.log
          output=$(tail -20 cmm-install.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
  
      - name: Disk Usage Analysis
        run: |
          docker exec cmm_almalinux8 bash -c "du -sh /svr-setup"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "df -hT"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "rpm -qa --queryformat '%10{size} - %-25{name} \t %{version}\n' | sort -n"
          docker exec cmm_almalinux8 bash -c "echo '---'"
        continue-on-error: true
  
      - name: centmin.sh setup
        run: |
          sleep 1
          docker exec cmm_almalinux8 bash -c "echo '1' > /etc/centminmod/email-primary.ini"
          docker exec cmm_almalinux8 bash -c "echo '2' > /etc/centminmod/email-secondary.ini"
        continue-on-error: true
  
      - name: YUM repolist all
        run: |
          sleep 1
          docker exec cmm_almalinux8 bash -c "yum repolist all"
        continue-on-error: true
  
      - name: Inspect wget install
        run: |
          sleep 1
          docker exec cmm_almalinux8 bash -c "/usr/bin/wget -V"
          sleep 1
          docker exec cmm_almalinux8 bash -c "/usr/local/bin/wget -V"
        continue-on-error: true
  
      - name: Inspect ccache install
        run: |
          sleep 1
          docker exec cmm_almalinux8 bash -c "/usr/local/bin/ccache -V"
          sleep 1
          docker exec cmm_almalinux8 bash -c "/usr/local/bin/ccache -s"
          sleep 1
          docker exec cmm_almalinux8 bash -c "grep ccache ~/.bashrc"
        continue-on-error: true
  
      - name: Inspect PHP-FPM setup
        run: |
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "systemctl status php-fpm.service"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "php-config || true"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "/usr/local/bin/php --ini"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "ldd /usr/local/bin/php"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "/usr/local/bin/php -v"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_almalinux8 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Inspect Nginx setup
        run: |
          sleep 1
          docker exec cmm_almalinux8 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_almalinux8 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_almalinux8 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_almalinux8 bash -c "systemctl status nginx.service"
          sleep 1
          docker exec cmm_almalinux8 bash -c "curl -I http://localhost"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "curl -sIv http://localhost"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "/usr/local/sbin/nginx -V"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "ldd /usr/local/sbin/nginx"
          docker exec cmm_almalinux8 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Inspect MariaDB setup
        run: |
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "systemctl status mariadb.service"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "cat /etc/my.cnf"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c 'mysql -t -e "SELECT * FROM mysql.plugin;"'
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c 'mysql -t -e "SHOW PLUGINS;"'
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "mysqladmin var | tr -s ' '"
        continue-on-error: true
  
      - name: Inspect Python3 setup
        run: |
          sleep 1
          docker exec cmm_almalinux8 bash -c "python3 --version"
          sleep 1
          docker exec cmm_almalinux8 bash -c "pip --version"
          sleep 1
          docker exec cmm_almalinux8 bash -c "alternatives --list | egrep -i 'pip|python' || echo 'No match for pip or python keywords'"
        continue-on-error: true
  
      - name: Inspect Redis Server setup
        run: |
          sleep 1
          docker exec cmm_almalinux8 bash -c "redis-cli info"
          sleep 1
          docker exec cmm_almalinux8 bash -c "systemctl status redis"
          sleep 1
          docker exec cmm_almalinux8 bash -c "php --ri redis"
        continue-on-error: true
  
      - name: Inspect pure-ftpd setup
        run: |
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "ls -lAh /etc/systemd/system/pure-ftpd.service.d"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "cat /etc/systemd/system/pure-ftpd.service.d/pidfile.conf"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "journalctl -u pure-ftpd --no-pager | tail -n 100"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "systemctl status pure-ftpd.service"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "ls -lAh /etc/ssl/private/pure-ftpd-dhparams.pem || echo '/etc/ssl/private/pure-ftpd-dhparams.pem not yet setup'"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "cat /etc/pure-ftpd/pure-ftpd.conf | egrep 'UnixAuthentication|VerboseLog|PureDB |CreateHomeDir|TLS|PassivePortRange|TLSCipherSuite|MaxClientsNumber|MaxClientsPerIP|NoAnonymous|Umask'"
        continue-on-error: true
  
      - name: Inspect chronyd setup
        run: |
          sleep 1
          docker exec cmm_almalinux8 bash -c "journalctl -u chronyd --no-pager | tail -n 100"
          sleep 1
          docker exec cmm_almalinux8 bash -c "systemctl status chronyd.service || echo 'chronyd not supported in docker containers'"
        continue-on-error: true
  
      - name: Inspect CSF Firewall setup
        run: |
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "egrep '^TCP_IN|^TCP6_IN' /etc/csf/csf.conf"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "grep 'MM_LICENSE_KEY' /etc/csf/csf.conf"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "csf -v"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "csf -ra"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "cat /etc/csf/csf.allow"
        continue-on-error: true
  
      - name: Inspect logrotation setup
        run: |
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "logrotate -dv /etc/logrotate.d/nginx"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "logrotate -dv /etc/logrotate.d/php-fpm"
        continue-on-error: true
  
      - name: Inspect Sysstat and systemd-journald service
        run: |
          docker exec cmm_almalinux8 bash -c "systemctl status sysstat.service"
          docker exec cmm_almalinux8 bash -c "systemctl status systemd-journald.service"
        continue-on-error: true
      
      - name: Check permissions of /var/log/journal
        run: |
          docker exec cmm_almalinux8 bash -c "ls -ld /var/log/journal || echo '/var/log/journal persistent storage not configured'"
        continue-on-error: true
      
      - name: Show recent systemd-journald logs
        run: |
          docker exec cmm_almalinux8 bash -c "journalctl --unit=systemd-journald.service --no-pager | tail -n 100"
        continue-on-error: true
  
      - name: Run cminfo
        run: |
          docker exec cmm_almalinux8 bash -c "/usr/local/src/centminmod/tools/cminfo.sh"
        continue-on-error: true
  
      - name: Run addons/golang.sh
        run: |
          docker exec cmm_almalinux8 bash -c "/usr/local/src/centminmod/addons/golang.sh install"
        continue-on-error: true
  
      - name: Run addons/nodejs.sh
        run: |
          docker exec cmm_almalinux8 bash -c "/usr/local/src/centminmod/addons/nodejs.sh install"
        continue-on-error: true
  
      - name: Run addons/opendkim.sh
        run: |
          docker exec cmm_almalinux8 bash -c "/usr/local/src/centminmod/addons/opendkim.sh"
        continue-on-error: true
  
      - name: Run tools/csfcf.sh
        run: |
          sleep 1
          docker exec cmm_almalinux8 bash -c "/usr/local/src/centminmod/tools/csfcf.sh"
          sleep 1
          docker exec cmm_almalinux8 bash -c "/usr/local/src/centminmod/tools/csfcf.sh auto"
          docker exec cmm_almalinux8 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv4"
          docker exec cmm_almalinux8 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv6"
        continue-on-error: true
  
      - name: Create Nginx HTTPS vhost
        run: |
          docker exec cmm_almalinux8 bash -c "/usr/bin/nv -d domain.com -s y"
        continue-on-error: true
  
      - name: Test mysqladmin_shell.sh MySQL Database Management
        run: |
          docker exec cmm_almalinux8 bash -c "echo -e 'dbname dbusername dbpassword\ndb2name db2username db2password' > /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "echo 'multidb'"
          docker exec cmm_almalinux8 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh multidb /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "echo 'createuserdb'"
          docker exec cmm_almalinux8 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh createuserdb mydbname mydbuser mydbpass"
          docker exec cmm_almalinux8 bash -c "echo '---'"
          docker exec cmm_almalinux8 bash -c "echo 'showgrants'"
          docker exec cmm_almalinux8 bash -c "echo 'dbusername' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_almalinux8 bash -c "echo 'db2username' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_almalinux8 bash -c "echo 'mydbuser' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_almalinux8 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Run cmupdate
        run: |
          docker exec cmm_almalinux8 bash -c "cmupdate"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx upgrade test
        run: |
          docker exec cmm_almalinux8 /home/centmin-option-4.sh
        continue-on-error: true
  
      - name: YUM History Info
        run: |
          docker exec cmm_almalinux8 bash -c "for id in \$(/usr/bin/yum history list | awk '{print \$1}' | grep -E '^[0-9]+$'); do /usr/bin/yum history info \$id; done"
        continue-on-error: true

      - name: Generate AlmaLinux package and repo lists
        run: |
          mkdir artifacts
          docker exec cmm_almalinux8 yum list installed | sort | tr -s ' ' | tee artifacts/almalinux_packages.txt
          docker exec cmm_almalinux8 yum list installed | sort | tr -s ' ' | awk '{print $1 " " $2}' | tee artifacts/almalinux_packages_filtered.txt
          docker exec cmm_almalinux8 yum repolist all | tee artifacts/almalinux_repos.txt

      - name: Upload AlmaLinux package and repo lists
        uses: actions/upload-artifact@v4
        with:
          name: almalinux_lists
          path: artifacts/*

  rockylinux:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Sysbox
        run: |
          curl -LO https://downloads.nestybox.com/sysbox/releases/v0.6.7/sysbox-ce_0.6.7-0.linux_amd64.deb
          sudo dpkg -i sysbox-ce_0.6.7-0.linux_amd64.deb || sudo apt-get install -f

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build 
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./dockerfiles/Dockerfile-rockylinux8
          platforms: linux/amd64
          load: true
          tags: cmm_rockylinux8:latest
  
      - name: Debug payload (repository_dispatch)
        run: echo ${{ github.event.client_payload.release }}
        
      - name: Debug input (workflow_dispatch)
        run: echo ${{ github.event.inputs.release }}
  
      - name: Run container Centmmin Mod LEMP Rocky Linux 8 Install
        run: |
          docker run -d --name=cmm_rockylinux8 --runtime=sysbox-runc --cap-add=SYS_ADMIN --security-opt seccomp=unconfined --security-opt label=disable --security-opt apparmor=unconfined -v /tmp/$(mktemp -d):/run -v /sys/fs/cgroup:/sys/fs/cgroup:ro cmm_rockylinux8:latest
          sleep 4
          docker exec cmm_rockylinux8 bash -c "curl -4sL https://centminmod.com/betainstaller.sh | bash" | tee cmm-install.log
          output=$(tail -20 cmm-install.log)
          echo "$output" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
  
      - name: Disk Usage Analysis
        run: |
          docker exec cmm_rockylinux8 bash -c "du -sh /svr-setup"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "df -hT"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "rpm -qa --queryformat '%10{size} - %-25{name} \t %{version}\n' | sort -n"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
        continue-on-error: true
  
      - name: centmin.sh setup
        run: |
          sleep 1
          docker exec cmm_rockylinux8 bash -c "echo '1' > /etc/centminmod/email-primary.ini"
          docker exec cmm_rockylinux8 bash -c "echo '2' > /etc/centminmod/email-secondary.ini"
        continue-on-error: true
  
      - name: YUM repolist all
        run: |
          sleep 1
          docker exec cmm_rockylinux8 bash -c "yum repolist all"
        continue-on-error: true
  
      - name: Inspect wget install
        run: |
          sleep 1
          docker exec cmm_rockylinux8 bash -c "/usr/bin/wget -V"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "/usr/local/bin/wget -V"
        continue-on-error: true
  
      - name: Inspect ccache install
        run: |
          sleep 1
          docker exec cmm_rockylinux8 bash -c "/usr/local/bin/ccache -V"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "/usr/local/bin/ccache -s"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "grep ccache ~/.bashrc"
        continue-on-error: true
  
      - name: Inspect PHP-FPM setup
        run: |
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "systemctl restart php-fpm.service"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "journalctl -xe --no-pager | tail -n 35"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "systemctl status php-fpm.service"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "php-config || true"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "/usr/local/bin/php --ini"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "ldd /usr/local/bin/php"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "/usr/local/bin/php -v"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "ls -lAhrt \$(php-config --extension-dir || true)"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Inspect Nginx setup
        run: |
          sleep 1
          docker exec cmm_rockylinux8 bash -c "ls -lAh /usr/local/nginx/logs"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "cat /usr/local/nginx/logs/nginx.pid"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "ps aux | grep nginx"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "systemctl status nginx.service"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "curl -I http://localhost"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "curl -sIv http://localhost"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "/usr/local/sbin/nginx -V"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "ldd /usr/local/sbin/nginx"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Inspect MariaDB setup
        run: |
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "systemctl status mariadb.service"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "cat /etc/my.cnf"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c 'mysql -t -e "SELECT * FROM mysql.plugin;"'
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c 'mysql -t -e "SHOW PLUGINS;"'
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "mysqladmin var | tr -s ' '"
        continue-on-error: true
  
      - name: Inspect Python3 setup
        run: |
          sleep 1
          docker exec cmm_rockylinux8 bash -c "python3 --version"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "pip --version"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "alternatives --list | egrep -i 'pip|python' || echo 'No match for pip or python keywords'"
        continue-on-error: true
  
      - name: Inspect Redis Server setup
        run: |
          sleep 1
          docker exec cmm_rockylinux8 bash -c "redis-cli info"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "systemctl status redis"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "php --ri redis"
        continue-on-error: true
  
      - name: Inspect pure-ftpd setup
        run: |
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "ls -lAh /etc/systemd/system/pure-ftpd.service.d"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "cat /etc/systemd/system/pure-ftpd.service.d/pidfile.conf"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "journalctl -u pure-ftpd --no-pager | tail -n 100"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "systemctl status pure-ftpd.service"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "ls -lAh /etc/ssl/private/pure-ftpd-dhparams.pem || echo '/etc/ssl/private/pure-ftpd-dhparams.pem not yet setup'"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "cat /etc/pure-ftpd/pure-ftpd.conf | egrep 'UnixAuthentication|VerboseLog|PureDB |CreateHomeDir|TLS|PassivePortRange|TLSCipherSuite|MaxClientsNumber|MaxClientsPerIP|NoAnonymous|Umask'"
        continue-on-error: true
  
      - name: Inspect chronyd setup
        run: |
          sleep 1
          docker exec cmm_rockylinux8 bash -c "journalctl -u chronyd --no-pager | tail -n 100"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "systemctl status chronyd.service || echo 'chronyd not supported in docker containers'"
        continue-on-error: true
  
      - name: Inspect CSF Firewall setup
        run: |
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "egrep '^TCP_IN|^TCP6_IN' /etc/csf/csf.conf"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "grep 'MM_LICENSE_KEY' /etc/csf/csf.conf"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "csf -v"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "csf -ra"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "cat /etc/csf/csf.allow"
        continue-on-error: true
  
      - name: Inspect logrotation setup
        run: |
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "logrotate -dv /etc/logrotate.d/nginx"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "logrotate -dv /etc/logrotate.d/php-fpm"
        continue-on-error: true
  
      - name: Inspect Sysstat and systemd-journald service
        run: |
          docker exec cmm_rockylinux8 bash -c "systemctl status sysstat.service"
          docker exec cmm_rockylinux8 bash -c "systemctl status systemd-journald.service"
        continue-on-error: true
      
      - name: Check permissions of /var/log/journal
        run: |
          docker exec cmm_rockylinux8 bash -c "ls -ld /var/log/journal || echo '/var/log/journal persistent storage not configured'"
        continue-on-error: true
      
      - name: Show recent systemd-journald logs
        run: |
          docker exec cmm_rockylinux8 bash -c "journalctl --unit=systemd-journald.service --no-pager | tail -n 100"
        continue-on-error: true
  
      - name: Run cminfo
        run: |
          docker exec cmm_rockylinux8 bash -c "/usr/local/src/centminmod/tools/cminfo.sh"
        continue-on-error: true
  
      - name: Run addons/golang.sh
        run: |
          docker exec cmm_rockylinux8 bash -c "/usr/local/src/centminmod/addons/golang.sh install"
        continue-on-error: true
  
      - name: Run addons/nodejs.sh
        run: |
          docker exec cmm_rockylinux8 bash -c "/usr/local/src/centminmod/addons/nodejs.sh install"
        continue-on-error: true
  
      - name: Run addons/opendkim.sh
        run: |
          docker exec cmm_rockylinux8 bash -c "/usr/local/src/centminmod/addons/opendkim.sh"
        continue-on-error: true
  
      - name: Run tools/csfcf.sh
        run: |
          sleep 1
          docker exec cmm_rockylinux8 bash -c "/usr/local/src/centminmod/tools/csfcf.sh"
          sleep 1
          docker exec cmm_rockylinux8 bash -c "/usr/local/src/centminmod/tools/csfcf.sh auto"
          docker exec cmm_rockylinux8 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv4"
          docker exec cmm_rockylinux8 bash -c "/usr/local/src/centminmod/tools/csfcf.sh ipv6"
        continue-on-error: true
  
      - name: Create Nginx HTTPS vhost
        run: |
          docker exec cmm_rockylinux8 bash -c "/usr/bin/nv -d domain.com -s y"
        continue-on-error: true
  
      - name: Test mysqladmin_shell.sh MySQL Database Management
        run: |
          docker exec cmm_rockylinux8 bash -c "echo -e 'dbname dbusername dbpassword\ndb2name db2username db2password' > /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "echo 'multidb'"
          docker exec cmm_rockylinux8 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh multidb /home/nginx/domains/domain.com/dbfile.txt"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "echo 'createuserdb'"
          docker exec cmm_rockylinux8 bash -c "/usr/local/src/centminmod/addons/mysqladmin_shell.sh createuserdb mydbname mydbuser mydbpass"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
          docker exec cmm_rockylinux8 bash -c "echo 'showgrants'"
          docker exec cmm_rockylinux8 bash -c "echo 'dbusername' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_rockylinux8 bash -c "echo 'db2username' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_rockylinux8 bash -c "echo 'mydbuser' | /usr/local/src/centminmod/addons/mysqladmin_shell.sh showgrants"
          docker exec cmm_rockylinux8 bash -c "echo '---'"
        continue-on-error: true
  
      - name: Run cmupdate
        run: |
          docker exec cmm_rockylinux8 bash -c "cmupdate"
        continue-on-error: true

      - name: centmin.sh menu option 4 Nginx upgrade test
        run: |
          docker exec cmm_rockylinux8 /home/centmin-option-4.sh
        continue-on-error: true
  
      - name: YUM History Info
        run: |
          docker exec cmm_rockylinux8 bash -c "for id in \$(/usr/bin/yum history list | awk '{print \$1}' | grep -E '^[0-9]+$'); do /usr/bin/yum history info \$id; done"
        continue-on-error: true

      - name: Generate Rocky Linux package and repo lists
        run: |
          mkdir artifacts
          docker exec cmm_rockylinux8 yum list installed | sort | tr -s ' ' | tee artifacts/rockylinux_packages.txt
          docker exec cmm_rockylinux8 yum list installed | sort | tr -s ' ' | awk '{print $1 " " $2}' | tee artifacts/rockylinux_packages_filtered.txt
          docker exec cmm_rockylinux8 yum repolist all | tee artifacts/rockylinux_repos.txt

      - name: Upload Rocky Linux package and repo lists
        uses: actions/upload-artifact@v4
        with:
          name: rockylinux_lists
          path: artifacts/*

  compare:
    needs: [almalinux, rockylinux]
    runs-on: ubuntu-24.04
    steps:
      - name: Download almalinux package and repo lists
        uses: actions/download-artifact@v4
        with:
          name: almalinux_lists
          path: almalinux
  
      - name: Download rockylinux package and repo lists
        uses: actions/download-artifact@v4
        with:
          name: rockylinux_lists
          path: rockylinux

      - name: Compare AlmaLinux 8 vs Rocky Linux installed packages and repos
        run: |
          set -x
          echo "Creating artifacts directory"
          mkdir artifacts
          echo "Installing diffutils"
          sudo apt-get update && sudo apt-get install -y diffutils || true
          echo "List artifacts"
          echo "ls -lAh almalinux"
          ls -lAh almalinux
          echo "ls -lAh rockylinux"
          ls -lAh rockylinux
          echo "Running diff on package lists"
          diff almalinux/almalinux_packages.txt rockylinux/rockylinux_packages.txt | tee artifacts/packages_diff.txt || true
          echo "Running diff on filtered package lists"
          diff almalinux/almalinux_packages_filtered.txt rockylinux/rockylinux_packages_filtered.txt | tee artifacts/packages_diff_filtered.txt || true
          echo "Running sdiff on package lists"
          sdiff -s -w 220 almalinux/almalinux_packages.txt rockylinux/rockylinux_packages.txt | tee artifacts/packages_sdiff.txt || true
          echo "Running sdiff on filtered package lists"
          sdiff -s -w 220 almalinux/almalinux_packages_filtered.txt rockylinux/rockylinux_packages_filtered.txt | tee artifacts/packages_sdiff_filtered.txt || true
          echo "Running diff on repo lists"
          diff almalinux/almalinux_repos.txt rockylinux/rockylinux_repos.txt | tee artifacts/repos_diff.txt || true
          echo "Running sdiff on repo lists"
          sdiff -s -w 220 almalinux/almalinux_repos.txt rockylinux/rockylinux_repos.txt | tee artifacts/repos_sdiff.txt || true

      - name: Upload comparison artifacts
        uses: actions/upload-artifact@v4
        with:
          name: comparison_results
          path: artifacts/

  discordNotificationSuccess:
    needs: [almalinux, rockylinux, compare]
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
    - name: Notify Discord Success
      run: |
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{\"content\":\"Workflow '${{ github.workflow }}' was triggered by '${{ github.event_name }}' and completed successfully!\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}

  discordNotificationFailure:
    needs: [almalinux, rockylinux, compare]
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
    - name: Notify Discord Failure
      run: |
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{\"content\":\"Workflow '${{ github.workflow }}' was triggered by '${{ github.event_name }}' and failed!\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}